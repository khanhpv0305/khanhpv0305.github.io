{"version":3,"sources":["services/image.js","constants/app.js","utils/delay-promise.js","containers/Layout/index.js","actions/image.js","constants/image.js","actions/spinner.js","constants/spinner.js","components/ImageCard/styled.js","components/ImageCard/containers/ActionBtns.js","components/ImageCard/index.js","pages/Home/components/Wrapper.js","components/ImageListWrapper/index.js","selectors/image.js","pages/Home/index.js","pages/Edit/components/Wrapper.js","pages/Edit/components/Form/styled.js","pages/Edit/components/Form/validationSchema.js","pages/Edit/components/Form/index.js","pages/Edit/index.js","components/OverlayWithSpinner/styled.js","components/OverlayWithSpinner/index.js","containers/TopLevelOverlayWithSpinner/index.js","style/GlobalStyle.js","reducers/index.js","reducers/image.js","reducers/spinner.js","store.js","index.js","App.js"],"names":["search","params","axios","get","concat","queryString","stringify","delay_promise","period","Promise","resolve","setTimeout","mapDispatchToProps","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","keyword","searchRes","rawItems","parsedItems","wrap","_context","prev","next","type","imageServices","q","sent","data","collection","items","map","item","formattedDateCreated","format","Date","date_created","id","nasa_id","thumbnailUrl","links","href","photographer","dateCreated","title","descr","description","isFavorite","payload","t0","stop","_x","apply","this","arguments","connect","state","isLoading","image","hasData","props","children","useEffect","react_default","createElement","Container","fluid","Row","Col","xs","ImageCard","styled","div","_templateObject","ThumbnailWrapper","_templateObject2","Thumbnail","img","_templateObject3","PhotographerAndDateCreated","_templateObject4","Photographer","span","_templateObject5","DateCreated","_templateObject6","Title","_templateObject7","Descr","_templateObject8","ActionBtnsWrapper","_templateObject9","ActionBtn","_templateObject10","is","_templateObject11","isNot","_templateObject12","markAsFavorite","imageId","removeFavorite","remove","editUrl","handleMarkImageAsFavorite","useCallback","handleRemoveFavorite","handleRemoveImage","assign","onClick","fa","as","Link","to","modal","components_ImageCard","src","containers_ActionBtns","Wrapper_templateObject","ImageListWrapper_templateObject","itemsSelector","images","Wrapper","ImageListWrapper","key","md","components_Wrapper_templateObject","Form","form","styled_templateObject","Heading","styled_templateObject2","Group","styled_templateObject3","Label","label","styled_templateObject4","RequiredMark","styled_templateObject5","SuccessMessage","styled_templateObject6","InvalidMsg","styled_templateObject7","TextInput","input","attrs","styled_templateObject8","styled_templateObject9","Textarea","textarea","styled_templateObject10","styled_templateObject11","SubmitBtn","button","styled_templateObject12","Yup","shape","required","memo","onSubmit","formik_esm","validationSchema","initialValues","isInitialValid","isValidSync","values","actions","then","setStatus","message","setSubmitting","delay","undefined","errors","isValid","isSubmitting","status","objectWithoutProperties","Form_styled","FormikForm","name","render","_ref2","field","htmlFor","invalid","component","placeholder","_ref3","_ref4","disabled","Edit","updateImage","size","offset","components_Wrapper","components_Form","_callee2","_context2","abrupt","_x2","ownProps","match","foundImage","find","stateProps","dispatchProps","objectSpread","OverlayWithSpinner","OverlayWithSpinner_styled_templateObject","_bgColor","defaultProps","components_OverlayWithSpinner","OverlayWithSpinner_styled","Spinner","color","TopLevelOverlayWithSpinner","isSpinnerDisplayed","spinner","isDisplayed","createGlobalStyle","GlobalStyle_templateObject","rootPersistConfig","storage","whitelist","rootReducer","combineReducers","length","isError","action","update","$set","$merge","prevItems","foundItemIndex","findIndex","defineProperty","$splice","persistReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","persistor","persistStore","ReactDOM","es","integration_react","loading","styled_components_browser_esm","theme","breakpoints","sm","lg","xl","Fragment","Helmet","defaultTitle","GlobalStyle","HashRouter","Route","containers_Layout","Switch","exact","path","Home","containers_TopLevelOverlayWithSpinner","document","getElementById"],"mappings":"0UAKaA,EAAS,SAACC,GAAD,OAAYC,IAAMC,IAAN,GAAAC,OCLC,8BDKD,YAAAA,OAA2CC,IAAYC,UAAUL,MELpFM,EAAA,SAACC,GAAD,OAAY,IAAIC,QAAQ,SAAAC,GACrCC,WAAW,WACTD,KACCF,MCsCCI,EAAqB,CACzBZ,OClCoB,SAACC,GAAD,sBAAAY,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAY,SAAAC,EAAOC,GAAP,IAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAR,EAAAC,EAAAQ,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAE9BP,EACEpB,EADFoB,QAGFD,EAAS,CACPS,KCd0B,yBDiB5BT,EEfgC,CAChCS,KCHkB,iBHQcH,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAYNE,EAAqB,CAAEC,EAAGV,IAZpB,OAYxBC,EAZwBI,EAAAM,KAaxBT,EAAWD,EAAUW,KAAKC,WAAWC,MACrCX,EAAcD,EAASa,IAAI,SAAAC,GAC/B,IAAMC,EAAuBC,iBAAO,IAAIC,KAAKH,EAAKJ,KAAK,GAAGQ,cAAe,cAEzE,MAAO,CACLC,GAAIL,EAAKJ,KAAK,GAAGU,QACjBC,aAAcP,EAAKQ,MAAM,GAAGC,KAC5BC,aAAcV,EAAKJ,KAAK,GAAGc,aAC3BC,YAAaV,EACbW,MAAOZ,EAAKJ,KAAK,GAAGgB,MACpBC,MAAOb,EAAKJ,KAAK,GAAGkB,YACpBC,YAAY,KAIhBhC,EAAS,CACPS,KCpCwB,uBDqCxBwB,QAAS7B,IAGXJ,EEnC8B,CAChCS,KCNkB,iBHOcH,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAA4B,GAAA5B,EAAA,SAmC9BN,EAAS,CACPS,KC1CwB,yBD6C1BT,EEzC8B,CAChCS,KCNkB,iBHOc,yBAAAH,EAAA6B,SAAApC,EAAA,kBAAZ,gBAAAqC,GAAA,OAAA3C,EAAA4C,MAAAC,KAAAC,YAAA,KDqCPC,cATS,SAAAC,GAAK,MAAK,CAChCC,UAAWD,EAAME,MAAMD,UACvBE,QAASH,EAAME,MAAMC,UAOiBpD,EAAzBgD,CApCA,SAAAK,GAAS,IAEpBC,EAIED,EAJFC,SACAF,EAGEC,EAHFD,QACAhE,EAEEiE,EAFFjE,OACA8D,EACEG,EADFH,UAWF,OARAK,oBAAU,WACHH,GACHhE,EAAO,CACLqB,QAAS,QAGZ,IAECyC,EAAkB,KAEfM,EAAAnD,EAAAoD,cAACC,EAAA,EAAD,CAAWC,OAAK,GACrBH,EAAAnD,EAAAoD,cAACG,EAAA,EAAD,KACEJ,EAAAnD,EAAAoD,cAACI,EAAA,EAAD,CAAKC,GAAI,IACNR,mlEK3BT,IAAMS,EAAYC,IAAOC,IAAVC,KAMfH,EAAUI,iBAAmBH,IAAOC,IAApCG,KAOAL,EAAUM,UAAYL,IAAOM,IAA7BC,KAQAR,EAAUS,2BAA6BR,IAAOC,IAA9CQ,KAOAV,EAAUW,aAAeV,IAAOW,KAAhCC,KAEAb,EAAUc,YAAcb,IAAOW,KAA/BG,KAEAf,EAAUgB,MAAQf,IAAOC,IAAzBe,KASAjB,EAAUkB,MAAQjB,IAAOC,IAAzBiB,KAWAnB,EAAUoB,kBAAoBnB,IAAOC,IAArCmB,KAKArB,EAAUsB,UAAYrB,IAAOC,IAA7BqB,IAoBMC,YAAG,aAAHA,CApBNC,KA4BMC,YAAM,aAANA,CA5BNC,MAoCe3B,yBC7CT/D,EAAqB,CACzB2F,eLD4B,SAACC,GAAD,MAAc,CAC1C3E,KChD8B,yBDiD9BwB,QAAS,CAAEmD,aKAXC,eLG4B,SAACD,GAAD,MAAc,CAC1C3E,KCpD6B,wBDqD7BwB,QAAS,CAAEmD,aKJXE,OLOoB,SAACF,GAAD,MAAc,CAClC3E,KCxDoB,eDyDpBwB,QAAS,CAAEmD,cKNE5C,cAAQ,KAAMhD,EAAdgD,CA9CI,SAAAK,GAAS,IAExBvB,EAKEuB,EALFvB,GACAU,EAIEa,EAJFb,WACAmD,EAGEtC,EAHFsC,eACAE,EAEExC,EAFFwC,eACAC,EACEzC,EADFyC,OAGIC,EAAO,SAAAvG,OAAYsC,GAGnBkE,EAA4BC,sBAAY,kBAAMN,EAAe7D,IAAK,IAClEoE,EAAuBD,sBAAY,kBAAMJ,EAAe/D,IAAK,IAC7DqE,EAAoBF,sBAAY,kBAAMH,EAAOhE,IAAK,IAExD,OAAO0B,EAAAnD,EAAAoD,cAACO,EAAUmB,kBAAX,KACJ3C,EACGgB,EAAAnD,EAAAoD,cAACO,EAAUqB,UAAXnF,OAAAkG,OAAA,CAAqBC,QAASH,GAA0B,CAAE1D,eAC1DgB,EAAAnD,EAAAoD,cAAC6C,EAAA,EAAD,OAEA9C,EAAAnD,EAAAoD,cAACO,EAAUqB,UAAX,CAAqBgB,QAASL,GAC9BxC,EAAAnD,EAAAoD,cAAC6C,EAAA,EAAD,OAIJ9C,EAAAnD,EAAAoD,cAACO,EAAUqB,UAAX,CAAqBgB,QAASF,GAC5B3C,EAAAnD,EAAAoD,cAAC6C,EAAA,EAAD,OAGF9C,EAAAnD,EAAAoD,cAACO,EAAUqB,UAAX,CACEkB,GAAIC,IACJC,GAAIV,EACJ9C,MAAO,CAAEyD,OAAO,IAEhBlD,EAAAnD,EAAAoD,cAAC6C,EAAA,EAAD,UCtCSK,EAAA,SAAAtD,GAAS,IAEpBvB,EAOEuB,EAPFvB,GACAE,EAMEqB,EANFrB,aACAG,EAKEkB,EALFlB,aACAC,EAIEiB,EAJFjB,YACAC,EAGEgB,EAHFhB,MACAC,EAEEe,EAFFf,MACAE,EACEa,EADFb,WAGF,OAAOgB,EAAAnD,EAAAoD,cAACO,EAAD,KACLR,EAAAnD,EAAAoD,cAACO,EAAUG,iBAAX,KACEX,EAAAnD,EAAAoD,cAACO,EAAUK,UAAX,CAAqBuC,IAAK5E,KAG5BwB,EAAAnD,EAAAoD,cAACO,EAAUQ,2BAAX,KACEhB,EAAAnD,EAAAoD,cAACO,EAAUU,aAAX,KAAyBvC,GAEzBqB,EAAAnD,EAAAoD,cAACO,EAAUa,YAAX,KAAwBzC,IAG1BoB,EAAAnD,EAAAoD,cAACO,EAAUe,MAAX,KAAkB1C,GAElBmB,EAAAnD,EAAAoD,cAACO,EAAUiB,MAAX,KAAkB3C,GAElBkB,EAAAnD,EAAAoD,cAACoD,EAAe,CAAE/E,KAAIU,uIChCXwB,UAAOC,IAAtB6C,qGCAe9C,UAAOC,IAAtB8C,eCFaC,GAAgB,SAAA/D,GAAK,OAAIA,EAAME,MAAM5B,OCyCnCyB,eAJS,SAAAC,GAAK,MAAK,CAChCgE,OAAQD,GAAc/D,KAGTD,CA5BF,SAAAK,GAAS,IAElB4D,EACE5D,EADF4D,OAGF,OAAOzD,EAAAnD,EAAAoD,cAACyD,EAAD,KACL1D,EAAAnD,EAAAoD,cAACG,EAAA,EAAD,KAKEJ,EAAAnD,EAAAoD,cAACI,EAAA,EAAD,CAAKC,GAAI,IACPN,EAAAnD,EAAAoD,cAAC0D,EAAD,KACE3D,EAAAnD,EAAAoD,cAACG,EAAA,EAAD,KACGqD,EAAOzF,IAAI,SAAA2B,GAAK,OAAIK,EAAAnD,EAAAoD,cAACI,EAAA,EAAD,CAAKuD,IAAKjE,EAAMrB,GAAIuF,GAAI,GAC3C7D,EAAAnD,EAAAoD,cAACkD,EAAcxD,+IC1Bda,WAAOC,IAAtBqD,g0DCCA,IAAMC,GAAOvD,IAAOwD,KAAVC,MAEVF,GAAKG,QAAU1D,IAAOC,IAAtB0D,MAKAJ,GAAKK,MAAQ5D,IAAOC,IAApB4D,MAIAN,GAAKO,MAAQ9D,IAAO+D,MAApBC,MAIAT,GAAKU,aAAejE,IAAOW,KAA3BuD,MAIAX,GAAKY,eAAiBnE,IAAOC,IAA7BmE,MASAb,GAAKc,WAAarE,IAAOC,IAAzBqE,MAMAf,GAAKgB,UAAYvE,IAAOwE,MAAMC,MAAM,CAAExH,KAAM,QAA3B+C,CAAjB0E,KAaInD,YAAG,UAAHA,CAbJoD,OAkBApB,GAAKqB,SAAW5E,IAAO6E,SAAvBC,KAYIvD,YAAG,UAAHA,CAZJwD,OAiBAxB,GAAKyB,UAAYhF,IAAOiF,OAAOR,MAAM,CAAExH,KAAM,UAA5B+C,CAAjBkF,MAae3B,mBCnFA4B,eACZC,MAAM,CACL/G,MAAO8G,YAAaE,SAAS,YAC7B/G,MAAO6G,YAAaE,SAAS,YAC7BlH,aAAcgH,cCGHG,kBAAK,SAAAjG,GAAS,IAEzBhC,EAEEgC,EAFFhC,KACAkI,EACElG,EADFkG,SAGF,OAAO/F,EAAAnD,EAAAoD,cAAC+F,GAAA,EAAD,CACLC,iBAAkBA,GAClBC,cAAerI,EACfsI,eAAgBF,GAAiBG,YAAYvI,GAC7CkI,SAAU,SAACM,EAAQC,GACjBP,EAASlI,EAAKS,GAAI+H,GACfE,KAAK,WACJD,EAAQE,UAAU,CAAEC,QAAS,wBAE7BH,EAAQI,eAAc,KAEvBH,KAAK,kBAAMI,EAAM,OACjBJ,KAAK,kBAAMD,EAAQE,UAAU,CAAEC,aAASG,QAG5C,SAAAnK,GAA6D,IAA1DoK,EAA0DpK,EAA1DoK,OAAQC,EAAkDrK,EAAlDqK,QAASC,EAAyCtK,EAAzCsK,aAAcC,EAA2BvK,EAA3BuK,OAA2BtK,OAAAuK,GAAA,EAAAvK,CAAAD,EAAA,8CAC5D,OAAOuD,EAAAnD,EAAAoD,cAACiH,GAAD,CAAMnE,GAAIoE,MAChBH,GAAUA,EAAOP,SAAWzG,EAAAnD,EAAAoD,cAACiH,GAAKvC,eAAN,KAAsBqC,EAAOP,SAE1DzG,EAAAnD,EAAAoD,cAAC+F,GAAA,EAAD,CACEoB,KAAK,QACLC,OACE,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,MAAH,OAAevH,EAAAnD,EAAAoD,cAACiH,GAAK9C,MAAN,KACbpE,EAAAnD,EAAAoD,cAACiH,GAAK5C,MAAN,CAAYkD,QAAQ,YAApB,QAGExH,EAAAnD,EAAAoD,cAACiH,GAAKzC,aAAN,WAGFzE,EAAAnD,EAAAoD,cAACiH,GAAKnC,UAANrI,OAAAkG,OAAA,CACEtE,GAAG,WACHmJ,UAAWZ,EAAOhI,OACd0I,IAGNvH,EAAAnD,EAAAoD,cAAC+F,GAAA,EAAD,CAAcoB,KAAK,QAAQM,UAAW3D,GAAKc,iBAKjD7E,EAAAnD,EAAAoD,cAAC+F,GAAA,EAAD,CACEoB,KAAK,QACLO,YAAY,gBACZF,UAAWZ,EAAO/H,MAClBuI,OACE,SAAAO,GAAA,IAAGL,EAAHK,EAAGL,MAAH,OAAevH,EAAAnD,EAAAoD,cAACiH,GAAK9C,MAAN,KACbpE,EAAAnD,EAAAoD,cAACiH,GAAK5C,MAAN,CAAYkD,QAAQ,YAApB,cAGExH,EAAAnD,EAAAoD,cAACiH,GAAKzC,aAAN,WAGFzE,EAAAnD,EAAAoD,cAACiH,GAAK9B,SAAN1I,OAAAkG,OAAA,CACEtE,GAAG,WACHmJ,UAAWZ,EAAO/H,OACdyI,IAGNvH,EAAAnD,EAAAoD,cAAC+F,GAAA,EAAD,CAAcoB,KAAK,QAAQM,UAAW3D,GAAKc,iBAKjD7E,EAAAnD,EAAAoD,cAAC+F,GAAA,EAAD,CACEoB,KAAK,eACLO,YAAY,eACZF,UAAWZ,EAAOlI,aAClB0I,OACE,SAAAQ,GAAA,IAAGN,EAAHM,EAAGN,MAAH,OAAevH,EAAAnD,EAAAoD,cAACiH,GAAK9C,MAAN,KACbpE,EAAAnD,EAAAoD,cAACiH,GAAK5C,MAAN,CAAYkD,QAAQ,mBAApB,eAEAxH,EAAAnD,EAAAoD,cAACiH,GAAKnC,UAANrI,OAAAkG,OAAA,CACEtE,GAAG,mBACCiJ,QAMZvH,EAAAnD,EAAAoD,cAACiH,GAAK1B,UAAN,CAAgBsC,UAAWhB,GAAWC,GAAtC,aCnFAgB,GAAOjC,eAAK,SAAAjG,GAKZA,EAHFuC,QAFuB,IAGvBzC,EAEEE,EAFFF,MACAqI,EACEnI,EADFmI,YAGF,OAAOhI,EAAAnD,EAAAoD,cAACG,EAAA,EAAD,KACLJ,EAAAnD,EAAAoD,cAACI,EAAA,EAAD,CAAKC,GAAI,CAAE2H,KAAM,EAAGC,OAAQ,IAC1BlI,EAAAnD,EAAAoD,cAACkI,GAAD,KACEnI,EAAAnD,EAAAoD,cAACmI,GAAD,CACEvK,KAAM8B,EACNoG,SAAUiC,SAiBdxL,GAAqB,CACzBwL,YfyBoB,SAAC5F,EAASvE,GAAV,sBAAAyJ,EAAA5K,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAmB,SAAAuL,EAAOrL,GAAP,OAAAJ,EAAAC,EAAAQ,KAAA,SAAAiL,GAAA,cAAAA,EAAA/K,KAAA+K,EAAA9K,MAAA,cACvCR,EEjEgC,CAChCS,KCHkB,iBHqElBT,EAAS,CACPS,KC9DkB,eD+DlBwB,QAAS,CACPmD,UACAvE,UAPmCyK,EAAA9K,KAAA,EAWjCmJ,EAAM,KAX2B,cAavC3J,EEzEgC,CAChCS,KCNkB,iBHiEqB6K,EAAAC,OAAA,kCAAAD,EAAAnJ,SAAAkJ,MAAnB,gBAAAG,GAAA,OAAAlB,EAAAjI,MAAAC,KAAAC,YAAA,KejBPC,eAnBS,SAACC,EAAOgJ,GAC9B,IAAMrG,EAAUqG,EAASC,MAAM7M,OAAOuG,QAChCuG,EAAalJ,EAAME,MAAM5B,MAAM6K,KAAK,SAAA3K,GAAI,OAAIA,EAAKK,KAAO8D,IAE9D,MAAO,CACLA,UACAzC,MAAOgJ,IAa6BnM,GALrB,SAACqM,EAAYC,GAAb,OAAApM,OAAAqM,GAAA,EAAArM,CAAA,GACdmM,EACAC,IAGUtJ,CAAyDuI,uQC/CxE,IAAMiB,GAAqBxI,IAAOC,IAAVwI,KAUR,SAAApJ,GAAK,OAAIA,EAAMqJ,WAG/BF,GAAmBG,aAAe,CAChCD,SAAU,sBAGGF,UCdAI,GAAA,SAAAvJ,GAAS,IAEpBqJ,EACErJ,EADFqJ,SAGF,OAAOlJ,EAAAnD,EAAAoD,cAACoJ,GAAuB,CAAEH,YAC/BlJ,EAAAnD,EAAAoD,cAACqJ,GAAA,EAAD,CAASC,MAAM,WCNbC,GAA6B1D,eAAK,SAAAjG,GAAK,OAAIA,EAAM4J,oBAAsBzJ,EAAAnD,EAAAoD,cAACmJ,GAAD,QAE9D5J,eACb,SAAAC,GAAK,MAAK,CAAEgK,mBAAoBhK,EAAMiK,QAAQC,cADjCnK,CAEbgK,qRCPaI,mBAAfC,oFCMMC,GAAoB,CACxBlG,IAAK,cACLmG,aACAC,UAAW,CAAE,UAGTC,GAAcC,aAAgB,CAClCvK,MCXa,WAQV,IAPHF,EAOGF,UAAA4K,OAAA,QAAAvD,IAAArH,UAAA,GAAAA,UAAA,GAPK,CACNxB,MAAO,GACP2B,WAAW,EACX0K,SAAS,EACTxK,SAAS,GAEXyK,EACG9K,UAAA4K,OAAA,EAAA5K,UAAA,QAAAqH,EACKnJ,EAAkB4M,EAAlB5M,KAAMwB,EAAYoL,EAAZpL,QAEd,OAAQxB,GACN,IpBhB0B,uBoBiBxB,OAAO6M,KAAO7K,EAAO,CACnBC,UAAW,CAAE6K,MAAM,KAIvB,IpBrB0B,uBoBsBxB,OAAOD,KAAO7K,EAAO,CACnB+K,OAAQ,CACNzM,MAAOkB,EACPS,WAAW,EACXE,SAAS,KAKf,IpB9B0B,uBoB+BxB,OAAO0K,KAAO7K,EAAO,CACnBC,UAAW,CAAE6K,MAAM,GACnBH,QAAS,CAAEG,MAAM,KAIrB,IpBnC4B,yBoBoC1B,OAAOD,KAAO7K,EAAO,CACnB1B,MAAO,SAAA0M,GACL,IAAMC,EAAiBD,EAAUE,UAAU,SAAA1M,GAAI,OAAIA,EAAKK,KAAOW,EAAQmD,UAEvE,OAAOkI,KAAOG,EAAD/N,OAAAkO,GAAA,EAAAlO,CAAA,GACVgO,EAAiB,CAChB1L,WAAY,CAAEuL,MAAM,SAO9B,IpBhD2B,wBoBiDzB,OAAOD,KAAO7K,EAAO,CACnB1B,MAAO,SAAA0M,GACL,IAAMC,EAAiBD,EAAUE,UAAU,SAAA1M,GAAI,OAAIA,EAAKK,KAAOW,EAAQmD,UAEvE,OAAOkI,KAAOG,EAAD/N,OAAAkO,GAAA,EAAAlO,CAAA,GACVgO,EAAiB,CAChB1L,WAAY,CAAEuL,MAAM,SAO9B,IpB7DkB,eoB8DhB,OAAOD,KAAO7K,EAAO,CACnB1B,MAAO,SAAA0M,GACL,IAAMC,EAAiBD,EAAUE,UAAU,SAAA1M,GAAI,OAAIA,EAAKK,KAAOW,EAAQmD,UAEvE,OAAOkI,KAAOG,EAAW,CACvBI,QAAS,CAAE,CAAEH,EAAgB,SAMrC,IpBvEkB,eoBwEhB,OAAOJ,KAAO7K,EAAO,CACnB1B,MAAO,SAAA0M,GACL,IAAMC,EAAiBD,EAAUE,UAAU,SAAA1M,GAAI,OAAIA,EAAKK,KAAOW,EAAQmD,UAEvE,OAAOkI,KAAOG,EAAD/N,OAAAkO,GAAA,EAAAlO,CAAA,GACVgO,EAAiB,CAAEF,OAAQvL,EAAQpB,WAM5C,QACE,OAAO4B,ID5EXiK,QEZa,WAKV,IAJHjK,EAIGF,UAAA4K,OAAA,QAAAvD,IAAArH,UAAA,GAAAA,UAAA,GAJK,CACNoK,aAAa,GAMf,QAHGpK,UAAA4K,OAAA,EAAA5K,UAAA,QAAAqH,GACKnJ,MAGN,InBbgB,emBcd,OAAO6M,KAAO7K,EAAO,CACnBkK,YAAa,CAAEY,MAAM,KAIzB,InBlBgB,emBmBd,OAAOD,KAAO7K,EAAO,CACnBkK,YAAa,CAAEY,MAAM,KAIzB,QACE,OAAO9K,MFPEqL,gBAAehB,GAAmBG,IGd3Cc,GAAmBC,OAAOC,sCAAwCC,KAE3DC,GAAQC,aACnBnB,GACAc,GACEM,aAAgBC,QAIPC,GAAYC,aAAaL,ICVtCM,IAASpE,OAAOrH,EAAAnD,EAAAoD,cCqBD,SAAAJ,GAAK,OAAIG,EAAAnD,EAAAoD,cAACyL,EAAA,EAAD,CAAUP,MAAOA,IACvCnL,EAAAnD,EAAAoD,cAAC0L,EAAA,EAAD,CACEC,QAAS5L,EAAAnD,EAAAoD,cAAA,0BACTsL,UAAWA,IAEXvL,EAAAnD,EAAAoD,cAAC4L,EAAA,EAAD,CAAeC,MAAO,CACpBC,YAAa,CACXC,GAAI,QACJnI,GAAI,QACJoI,GAAI,QACJC,GAAI,YAGNlM,EAAAnD,EAAAoD,cAAAD,EAAAnD,EAAAsP,SAAA,KACEnM,EAAAnD,EAAAoD,cAACmM,EAAA,OAAD,CAAQC,aAAa,gBAErBrM,EAAAnD,EAAAoD,cAACqM,GAAD,MAEAtM,EAAAnD,EAAAoD,cAACsM,EAAA,EAAD,KACEvM,EAAAnD,EAAAoD,cAACuM,EAAA,EAAD,CAAOnF,OAAQ,SAAAxH,GAAK,OAAIG,EAAAnD,EAAAoD,cAACwM,EAAW5M,EAClCG,EAAAnD,EAAAoD,cAACyM,EAAA,EAAD,KACE1M,EAAAnD,EAAAoD,cAACuM,EAAA,EAAD,CAAOG,OAAK,EAACC,KAAK,IAAIlF,UAAWmF,KAEjC7M,EAAAnD,EAAAoD,cAACuM,EAAA,EAAD,CAAOG,OAAK,EAACC,KAAK,iBAAiBlF,UAAWK,WAKpD/H,EAAAnD,EAAAoD,cAAC6M,GAAD,WDjDQ,MAASC,SAASC,eAAe","file":"static/js/main.2125b075.chunk.js","sourcesContent":["import axios from 'axios'\r\nimport queryString from 'query-string'\r\n\r\nimport { NASA_IMAGES_API_URL } from 'constants/app'\r\n\r\nexport const search = (params) => axios.get(`${NASA_IMAGES_API_URL}/search?${queryString.stringify(params)}`)","export const NASA_IMAGES_API_URL = 'https://images-api.nasa.gov'","export default (period) => new Promise(resolve => {\r\n  setTimeout(() => {\r\n    resolve()\r\n  }, period)\r\n})","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\n// Components\r\nimport { Container, Row, Col } from 'reactstrap'\r\n\r\n// Actions\r\nimport { search } from 'actions/image'\r\n\r\nconst Layout = props => {\r\n  const {\r\n    children,\r\n    hasData,\r\n    search,\r\n    isLoading\r\n  } = props\r\n\r\n  useEffect(() => {\r\n    if (!hasData) {\r\n      search({\r\n        keyword: '\"\"'\r\n      })\r\n    }\r\n  }, [])\r\n\r\n  if (isLoading) return null\r\n\r\n  return <Container fluid>\r\n    <Row>\r\n      <Col xs={12}>\r\n        {children}\r\n      </Col>\r\n    </Row>\r\n  </Container>\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isLoading: state.image.isLoading,\r\n  hasData: state.image.hasData\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  search\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Layout)","import { format } from 'date-fns'\r\n\r\nimport * as spinnerActions from 'actions/spinner'\r\nimport * as imageActionTypes from 'constants/image'\r\nimport * as imageServices from 'services/image'\r\n\r\nimport delay from 'utils/delay-promise'\r\n\r\nexport const search = (params) => async (dispatch) => {\r\n  const {\r\n    keyword\r\n  } = params\r\n\r\n  dispatch({\r\n    type: imageActionTypes.SEARCH_REQUEST\r\n  })\r\n\r\n  dispatch(spinnerActions.showSpinner())\r\n\r\n  try {\r\n    const searchRes = await imageServices.search({ q: keyword })\r\n    const rawItems = searchRes.data.collection.items\r\n    const parsedItems = rawItems.map(item => {\r\n      const formattedDateCreated = format(new Date(item.data[0].date_created), 'MM/DD/YYYY')\r\n  \r\n      return {\r\n        id: item.data[0].nasa_id,\r\n        thumbnailUrl: item.links[0].href,\r\n        photographer: item.data[0].photographer,\r\n        dateCreated: formattedDateCreated,\r\n        title: item.data[0].title,\r\n        descr: item.data[0].description,\r\n        isFavorite: false\r\n      }\r\n    })\r\n\r\n    dispatch({\r\n      type: imageActionTypes.SEARCH_SUCCESS,\r\n      payload: parsedItems\r\n    })\r\n\r\n    dispatch(spinnerActions.hideSpinner())\r\n  } catch(e) {\r\n    dispatch({\r\n      type: imageActionTypes.SEARCH_FAILURE\r\n    })\r\n\r\n    dispatch(spinnerActions.hideSpinner())\r\n  }\r\n}\r\n\r\nexport const markAsFavorite = (imageId) => ({\r\n  type: imageActionTypes.MARK_AS_FAVORITE,\r\n  payload: { imageId }\r\n})\r\n\r\nexport const removeFavorite = (imageId) => ({\r\n  type: imageActionTypes.REMOVE_FAVORITE,\r\n  payload: { imageId }\r\n})\r\n\r\nexport const remove = (imageId) => ({\r\n  type: imageActionTypes.REMOVE,\r\n  payload: { imageId }\r\n})\r\n\r\nexport const update = (imageId, data) => async (dispatch) => {\r\n  dispatch(spinnerActions.showSpinner())\r\n\r\n  dispatch({\r\n    type: imageActionTypes.UPDATE,\r\n    payload: {\r\n      imageId,\r\n      data\r\n    }\r\n  })\r\n\r\n  await delay(200)\r\n\r\n  dispatch(spinnerActions.hideSpinner())\r\n\r\n  return\r\n}","export const SEARCH_REQUEST = 'image/SEARCH_REQUEST'\r\nexport const SEARCH_SUCCESS = 'image/SEARCH_SUCCESS'\r\nexport const SEARCH_FAILURE = 'image/SEARCH_FAILURE'\r\n\r\nexport const MARK_AS_FAVORITE = 'image/MARK_AS_FAVORITE'\r\nexport const REMOVE_FAVORITE = 'image/REMOVE_FAVORITE'\r\nexport const REMOVE = 'image/REMOVE'\r\n\r\nexport const UPDATE = 'image/UPDATE'","import * as spinnerActionTypes from 'constants/spinner'\r\n\r\nexport const showSpinner = () => ({\r\n  type: spinnerActionTypes.SHOW\r\n})\r\n\r\nexport const hideSpinner = () => ({\r\n  type: spinnerActionTypes.HIDE\r\n})","export const SHOW = 'spinner/SHOW'\r\nexport const HIDE = 'spinner/HIDE'","import styled from 'styled-components'\r\nimport is, { isNot } from 'styled-is'\r\n\r\nconst ImageCard = styled.div`\r\n  margin-bottom: 30px;\r\n  background: rgba(0, 0, 0, 0.05);\r\n  padding: 0 15px 15px;\r\n`\r\n\r\nImageCard.ThumbnailWrapper = styled.div`\r\n  position: relative;\r\n  padding-top: 60%;\r\n  overflow: hidden;\r\n  margin: 0 -15px 1rem;\r\n`\r\n\r\nImageCard.Thumbnail = styled.img`\r\n  position: absolute;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  left: 0;\r\n  width: 100%;\r\n`\r\n\r\nImageCard.PhotographerAndDateCreated = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin-bottom: 1rem;\r\n`\r\n\r\nImageCard.Photographer = styled.span``\r\n\r\nImageCard.DateCreated = styled.span``\r\n\r\nImageCard.Title = styled.div`\r\n  font-weight: 500;\r\n  font-size: 1.25rem;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  margin-bottom: 1rem;\r\n`\r\n\r\nImageCard.Descr = styled.div`\r\n  display: -webkit-box;\r\n  line-height: 1.5rem;\r\n  height: 4.5rem;\r\n  -webkit-line-clamp: 3;\r\n  -webkit-box-orient: vertical;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  margin-bottom: 1.5rem;\r\n`\r\n\r\nImageCard.ActionBtnsWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`\r\n\r\nImageCard.ActionBtn = styled.div`\r\n  display: inline-flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 50px;\r\n  width: 50px;\r\n  border: 1px solid #cecccc;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  transition: all 0.25s;\r\n  background: white;\r\n\r\n  &:not(:last-child) {\r\n    margin-right: 12px;\r\n  }\r\n\r\n  > svg {\r\n    color: #cecccc;\r\n    font-size: 1.25em;\r\n\r\n    ${is('isFavorite')`\r\n      color: red;\r\n    `}\r\n  }\r\n\r\n  &:hover {\r\n    border-color: #b0acac;\r\n    \r\n    ${isNot('isFavorite')`\r\n      > svg {\r\n        color: #b0acac;\r\n      }\r\n    `}\r\n  }\r\n`\r\n\r\nexport default ImageCard","import React, { useCallback } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\n\r\n// Components\r\nimport ImageCard from '../styled'\r\nimport { FaRegHeart, FaHeart, FaTrashAlt, FaPen } from 'react-icons/fa'\r\n\r\n// Actions\r\nimport { markAsFavorite, removeFavorite, remove } from 'actions/image'\r\n\r\nconst ActionBtns = props => {\r\n  const {\r\n    id,\r\n    isFavorite,\r\n    markAsFavorite,\r\n    removeFavorite,\r\n    remove\r\n  } = props\r\n\r\n  const editUrl = `/edit/${id}`\r\n\r\n  // Event handlers\r\n  const handleMarkImageAsFavorite = useCallback(() => markAsFavorite(id), [])\r\n  const handleRemoveFavorite = useCallback(() => removeFavorite(id), [])\r\n  const handleRemoveImage = useCallback(() => remove(id), [])\r\n\r\n  return <ImageCard.ActionBtnsWrapper>\r\n    {isFavorite\r\n      ? <ImageCard.ActionBtn onClick={handleRemoveFavorite} {...{ isFavorite }}>\r\n        <FaHeart />\r\n      </ImageCard.ActionBtn>\r\n      : <ImageCard.ActionBtn onClick={handleMarkImageAsFavorite}>\r\n        <FaRegHeart />\r\n      </ImageCard.ActionBtn>\r\n    }\r\n\r\n    <ImageCard.ActionBtn onClick={handleRemoveImage}>\r\n      <FaTrashAlt />\r\n    </ImageCard.ActionBtn>\r\n\r\n    <ImageCard.ActionBtn\r\n      as={Link}\r\n      to={editUrl}\r\n      state={{ modal: true }}\r\n    >\r\n      <FaPen />\r\n    </ImageCard.ActionBtn>\r\n  </ImageCard.ActionBtnsWrapper>\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  markAsFavorite,\r\n  removeFavorite,\r\n  remove\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(ActionBtns)","import React from 'react'\r\n\r\n// Componenst\r\nimport ImageCard from './styled'\r\n\r\n// Containers\r\nimport ActionBtns from './containers/ActionBtns'\r\n\r\nexport default props => {\r\n  const {\r\n    id,\r\n    thumbnailUrl,\r\n    photographer,\r\n    dateCreated,\r\n    title,\r\n    descr,\r\n    isFavorite\r\n  } = props\r\n\r\n  return <ImageCard>\r\n    <ImageCard.ThumbnailWrapper>\r\n      <ImageCard.Thumbnail src={thumbnailUrl} />\r\n    </ImageCard.ThumbnailWrapper>\r\n\r\n    <ImageCard.PhotographerAndDateCreated>\r\n      <ImageCard.Photographer>{photographer}</ImageCard.Photographer>\r\n\r\n      <ImageCard.DateCreated>{dateCreated}</ImageCard.DateCreated>\r\n    </ImageCard.PhotographerAndDateCreated>\r\n\r\n    <ImageCard.Title>{title}</ImageCard.Title>\r\n\r\n    <ImageCard.Descr>{descr}</ImageCard.Descr>\r\n\r\n    <ActionBtns {...{ id, isFavorite }} />\r\n  </ImageCard>\r\n}","import styled from 'styled-components'\r\n\r\nexport default styled.div`\r\n  padding-top: 50px;\r\n  padding-bottom: 50px;\r\n`","import styled from 'styled-components'\r\n\r\nexport default styled.div`\r\n  margin-bottom: -30px;\r\n`","export const itemsSelector = state => state.image.items","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\n// Components\r\nimport ImageCard from 'components/ImageCard'\r\nimport { Row, Col } from 'reactstrap'\r\nimport Wrapper from './components/Wrapper'\r\nimport ImageListWrapper from 'components/ImageListWrapper'\r\nimport Filter from 'containers/Filter'\r\n\r\n// Selectors\r\nimport { itemsSelector } from 'selectors/image'\r\n\r\nconst Home = props => {\r\n  const {\r\n    images\r\n  } = props\r\n\r\n  return <Wrapper>\r\n    <Row>\r\n      {/* <Col xs={3}>\r\n        <Filter />\r\n      </Col> */}\r\n\r\n      <Col xs={12}>\r\n        <ImageListWrapper>\r\n          <Row>\r\n            {images.map(image => <Col key={image.id} md={4}>\r\n              <ImageCard {...image} />\r\n            </Col>)}\r\n          </Row>\r\n        </ImageListWrapper>\r\n      </Col>\r\n    </Row>\r\n  </Wrapper>\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  images: itemsSelector(state)\r\n})\r\n\r\nexport default connect(mapStateToProps)(Home)","import styled from 'styled-components'\r\n\r\nexport default styled.div`\r\n  padding-top: 50px;\r\n  padding-bottom: 50px;\r\n`","import styled from 'styled-components'\r\nimport is from 'styled-is'\r\n\r\nconst Form = styled.form``\r\n\r\nForm.Heading = styled.div`\r\n  font-size: 1.25rem;\r\n  font-weight: 500;\r\n`\r\n\r\nForm.Group = styled.div`\r\n  margin-bottom: 0.75rem;\r\n`\r\n\r\nForm.Label = styled.label`\r\n  font-size: 0.875rem;\r\n`\r\n\r\nForm.RequiredMark = styled.span`\r\n  color: red;\r\n  margin-left: 5px;\r\n`\r\nForm.SuccessMessage = styled.div`\r\n  font-size: 1.15rem;\r\n  margin-bottom: 1em;\r\n  background: #d4edda;\r\n  border-left: 4px solid #155724;\r\n  color: #155724;\r\n  padding: 15px;\r\n`\r\n\r\nForm.InvalidMsg = styled.div`\r\n  color: red;\r\n  font-size: 0.875rem;\r\n  margin-top: 0.5em;\r\n`\r\n\r\nForm.TextInput = styled.input.attrs({ type: 'text' })`\r\n  display: block;\r\n  width: 100%;\r\n  border: 1px solid #cecccc;\r\n  padding-left: 12px;\r\n  padding-right: 12px;\r\n  height: 55px;\r\n\r\n  &:focus {\r\n    border-color: #b0acac;\r\n    outline: none;\r\n  }\r\n\r\n  ${is('invalid')`\r\n    border-color: red;\r\n  `}\r\n`\r\n\r\nForm.Textarea = styled.textarea`\r\n  display: block;\r\n  width: 100%;\r\n  border: 1px solid #cecccc;\r\n  padding: 12px;\r\n  min-height: calc(15em + 26px);\r\n\r\n  &:focus {\r\n    border-color: #b0acac;\r\n    outline: none;\r\n  }\r\n\r\n  ${is('invalid')`\r\n    border-color: red;\r\n  `}\r\n`\r\n\r\nForm.SubmitBtn = styled.button.attrs({ type: 'submit' })`\r\n  height: 55px;\r\n  padding-left: 24px;\r\n  padding-right: 24px;\r\n  color: white;\r\n  border: none;\r\n  background: #784CC0;\r\n\r\n  &:disabled {\r\n    background: #a38fc4;\r\n  }\r\n`\r\n\r\nexport default Form","import * as Yup from 'yup'\r\n\r\nexport default Yup.object()\r\n  .shape({\r\n    title: Yup.string().required('Required'),\r\n    descr: Yup.string().required('Required'),\r\n    photographer: Yup.string()\r\n  })","import React, { memo } from 'react'\r\nimport { Formik, Form as FormikForm, Field, ErrorMessage } from 'formik'\r\n\r\nimport Form from './styled'\r\n\r\nimport validationSchema from './validationSchema'\r\n\r\nimport delay from 'utils/delay-promise'\r\n\r\nexport default memo(props => {\r\n  const {\r\n    data,\r\n    onSubmit\r\n  } = props\r\n\r\n  return <Formik\r\n    validationSchema={validationSchema}\r\n    initialValues={data}\r\n    isInitialValid={validationSchema.isValidSync(data)}\r\n    onSubmit={(values, actions) => {\r\n      onSubmit(data.id, values)\r\n        .then(() => {\r\n          actions.setStatus({ message: \"Update successfully\" })\r\n\r\n          actions.setSubmitting(false)\r\n        })\r\n        .then(() => delay(2000))\r\n        .then(() => actions.setStatus({ message: undefined }))\r\n    }}\r\n  >\r\n    {({ errors, isValid, isSubmitting, status, ...restProps }) => {\r\n      return <Form as={FormikForm}>\r\n      {status && status.message && <Form.SuccessMessage>{status.message}</Form.SuccessMessage>}\r\n\r\n      <Field\r\n        name=\"title\"\r\n        render={\r\n          ({ field }) => <Form.Group>\r\n            <Form.Label htmlFor=\"title-id\">\r\n              Title\r\n\r\n              <Form.RequiredMark>*</Form.RequiredMark>\r\n            </Form.Label>\r\n\r\n            <Form.TextInput\r\n              id=\"title-id\"\r\n              invalid={!!errors.title}\r\n              {...field}\r\n            />\r\n\r\n            <ErrorMessage name=\"title\" component={Form.InvalidMsg} />\r\n          </Form.Group>\r\n        }\r\n      />\r\n\r\n      <Field\r\n        name=\"descr\"\r\n        placeholder=\"Description *\"\r\n        invalid={!!errors.descr}\r\n        render={\r\n          ({ field }) => <Form.Group>\r\n            <Form.Label htmlFor=\"descr-id\">\r\n              Description\r\n\r\n              <Form.RequiredMark>*</Form.RequiredMark>\r\n            </Form.Label>\r\n\r\n            <Form.Textarea\r\n              id=\"descr-id\"\r\n              invalid={!!errors.descr}\r\n              {...field}\r\n            />\r\n\r\n            <ErrorMessage name=\"descr\" component={Form.InvalidMsg} />\r\n          </Form.Group>\r\n        }\r\n      />\r\n\r\n      <Field\r\n        name=\"photographer\"\r\n        placeholder=\"Photographer\"\r\n        invalid={!!errors.photographer}\r\n        render={\r\n          ({ field }) => <Form.Group>\r\n            <Form.Label htmlFor=\"photographer-id\">Description</Form.Label>\r\n\r\n            <Form.TextInput\r\n              id=\"photographer-id\"\r\n              {...field}\r\n            />\r\n          </Form.Group>\r\n        }\r\n      />\r\n\r\n      <Form.SubmitBtn disabled={!isValid || isSubmitting}>SAVE</Form.SubmitBtn>\r\n    </Form>\r\n    }}\r\n  </Formik>\r\n})","import React, { memo } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\n// Components\r\nimport { Row, Col } from 'reactstrap'\r\nimport Wrapper from './components/Wrapper'\r\nimport Form from './components/Form'\r\n\r\n// Actions\r\nimport { update as updateImage } from 'actions/image'\r\n\r\nconst Edit = memo(props => {\r\n  const {\r\n    imageId,\r\n    image,\r\n    updateImage\r\n  } = props\r\n\r\n  return <Row>\r\n    <Col xs={{ size: 8, offset: 2 }}>\r\n      <Wrapper>\r\n        <Form\r\n          data={image}\r\n          onSubmit={updateImage}\r\n        />\r\n      </Wrapper>\r\n    </Col>\r\n  </Row>\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const imageId = ownProps.match.params.imageId\r\n  const foundImage = state.image.items.find(item => item.id === imageId)\r\n\r\n  return {\r\n    imageId,\r\n    image: foundImage\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  updateImage\r\n}\r\n\r\nconst mergeProps = (stateProps, dispatchProps) => ({\r\n  ...stateProps,\r\n  ...dispatchProps\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps, mergeProps)(Edit)","import styled from 'styled-components'\r\n\r\nconst OverlayWithSpinner = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  z-index: 9999;\r\n  background: ${props => props._bgColor};\r\n`\r\n\r\nOverlayWithSpinner.defaultProps = {\r\n  _bgColor: 'rgba(0, 0, 0, 0.3)'\r\n}\r\n\r\nexport default OverlayWithSpinner","import React from 'react'\r\n\r\nimport OverlayWithSpinner from './styled'\r\nimport { Spinner } from 'reactstrap'\r\n\r\nexport default props => {\r\n  const {\r\n    _bgColor\r\n  } = props\r\n\r\n  return <OverlayWithSpinner {...{ _bgColor }}>\r\n    <Spinner color=\"dark\" />\r\n  </OverlayWithSpinner>\r\n}","import React, { memo } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport OverlayWithSpinner from 'components/OverlayWithSpinner'\r\n\r\nconst TopLevelOverlayWithSpinner = memo(props => props.isSpinnerDisplayed && <OverlayWithSpinner />)\r\n\r\nexport default connect(\r\n  state => ({ isSpinnerDisplayed: state.spinner.isDisplayed })\r\n)(TopLevelOverlayWithSpinner)","import { createGlobalStyle } from 'styled-components'\r\n\r\nexport default createGlobalStyle`\r\n  @import url('https://fonts.googleapis.com/css?family=Montserrat:300,400,500,600,700');\r\n\r\n  body {\r\n    font-family: 'Montserrat', sans-serif !important;\r\n    /* color: #000; */\r\n  }\r\n`","import { combineReducers } from 'redux'\r\nimport { persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\n\r\n// Sub reducers\r\nimport image from 'reducers/image'\r\nimport spinner from 'reducers/spinner'\r\n\r\nconst rootPersistConfig = {\r\n  key: 'nasa-images',\r\n  storage,\r\n  whitelist: [ 'image' ]\r\n}\r\n\r\nconst rootReducer = combineReducers({\r\n  image,\r\n  spinner\r\n})\r\n\r\nexport default persistReducer(rootPersistConfig, rootReducer)","import update from 'immutability-helper'\r\n\r\nimport * as imageActionTypes from 'constants/image'\r\n\r\nexport default (\r\n  state = {\r\n    items: [],\r\n    isLoading: false,\r\n    isError: false,\r\n    hasData: false\r\n  },\r\n  action\r\n) => {\r\n  const { type, payload } = action\r\n\r\n  switch (type) {\r\n    case imageActionTypes.SEARCH_REQUEST: {\r\n      return update(state, {\r\n        isLoading: { $set: true }\r\n      })\r\n    }\r\n\r\n    case imageActionTypes.SEARCH_SUCCESS: {\r\n      return update(state, {\r\n        $merge: {\r\n          items: payload,\r\n          isLoading: false,\r\n          hasData: true\r\n        }\r\n      })\r\n    }\r\n\r\n    case imageActionTypes.SEARCH_FAILURE: {\r\n      return update(state, {\r\n        isLoading: { $set: false },\r\n        isError: { $set: true }\r\n      })\r\n    }\r\n\r\n    case imageActionTypes.MARK_AS_FAVORITE: {\r\n      return update(state, {\r\n        items: prevItems => {\r\n          const foundItemIndex = prevItems.findIndex(item => item.id === payload.imageId)\r\n\r\n          return update(prevItems, {\r\n            [foundItemIndex]: {\r\n              isFavorite: { $set: true }\r\n            }\r\n          })\r\n        }\r\n      })\r\n    }\r\n\r\n    case imageActionTypes.REMOVE_FAVORITE: {\r\n      return update(state, {\r\n        items: prevItems => {\r\n          const foundItemIndex = prevItems.findIndex(item => item.id === payload.imageId)\r\n\r\n          return update(prevItems, {\r\n            [foundItemIndex]: {\r\n              isFavorite: { $set: false }\r\n            }\r\n          })\r\n        }\r\n      })\r\n    }\r\n\r\n    case imageActionTypes.REMOVE: {\r\n      return update(state, {\r\n        items: prevItems => {\r\n          const foundItemIndex = prevItems.findIndex(item => item.id === payload.imageId)\r\n\r\n          return update(prevItems, {\r\n            $splice: [ [ foundItemIndex, 1 ] ]\r\n          })\r\n        }\r\n      })\r\n    }\r\n\r\n    case imageActionTypes.UPDATE: {\r\n      return update(state, {\r\n        items: prevItems => {\r\n          const foundItemIndex = prevItems.findIndex(item => item.id === payload.imageId)\r\n\r\n          return update(prevItems, {\r\n            [foundItemIndex]: { $merge: payload.data }\r\n          })\r\n        }\r\n      })\r\n    }\r\n\r\n    default: {\r\n      return state\r\n    }\r\n  }\r\n}","import update from 'immutability-helper'\r\n\r\nimport * as spinnerActionTypes from 'constants/spinner'\r\n\r\nexport default (\r\n  state = {\r\n    isDisplayed: false\r\n  },\r\n  action\r\n) => {\r\n  const { type } = action\r\n\r\n  switch (type) {\r\n    case spinnerActionTypes.SHOW: {\r\n      return update(state, {\r\n        isDisplayed: { $set: true }\r\n      })\r\n    }\r\n    \r\n    case spinnerActionTypes.HIDE: {\r\n      return update(state, {\r\n        isDisplayed: { $set: false }\r\n      })\r\n    }\r\n\r\n    default: {\r\n      return state\r\n    }\r\n  }\r\n}","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { persistStore } from 'redux-persist'\r\nimport rootReducer from 'reducers'\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(\r\n    applyMiddleware(thunk)\r\n  )\r\n)\r\n\r\nexport const persistor = persistStore(store)","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport { ThemeProvider } from 'styled-components'\r\nimport { Helmet } from 'react-helmet'\r\nimport { PersistGate } from 'redux-persist/es/integration/react'\r\n\r\n// Layout\r\nimport Layout from 'containers/Layout'\r\n\r\n// Pages\r\nimport Home from 'pages/Home'\r\nimport Edit from 'pages/Edit'\r\n\r\n// Components\r\nimport TopLevelOverlayWithSpinner from 'containers/TopLevelOverlayWithSpinner'\r\n\r\n// Global Styles\r\nimport 'normalize.css/normalize.css'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport GlobalStyle from 'style/GlobalStyle'\r\n\r\n// Store\r\nimport { store, persistor } from 'store'\r\n\r\nexport default props => <Provider store={store}>\r\n  <PersistGate\r\n    loading={<span>Loading...</span>}\r\n    persistor={persistor}\r\n  >\r\n    <ThemeProvider theme={{\r\n      breakpoints: {\r\n        sm: '576px',\r\n        md: '768px',\r\n        lg: '992px',\r\n        xl: '1200px'\r\n      }\r\n    }}>\r\n      <>\r\n        <Helmet defaultTitle=\"NASA Images\" />\r\n\r\n        <GlobalStyle />\r\n        \r\n        <Router>\r\n          <Route render={props => <Layout {...props}>\r\n            <Switch>\r\n              <Route exact path=\"/\" component={Home} />\r\n\r\n              <Route exact path=\"/edit/:imageId\" component={Edit} />\r\n            </Switch>\r\n          </Layout>} />\r\n        </Router>\r\n\r\n        <TopLevelOverlayWithSpinner />\r\n      </>\r\n    </ThemeProvider>\r\n  </PersistGate>\r\n</Provider>"],"sourceRoot":""}