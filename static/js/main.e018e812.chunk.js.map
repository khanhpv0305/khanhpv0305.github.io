{"version":3,"sources":["services/image.js","constants/app.js","utils/delay-promise.js","containers/Layout/index.js","actions/image.js","constants/image.js","actions/spinner.js","constants/spinner.js","components/ImageCard/styled.js","components/ImageCard/containers/ActionBtns.js","components/ImageCard/index.js","pages/Home/components/Wrapper.js","components/ImageListWrapper/index.js","containers/Filter/components/Wrapper.js","containers/Filter/components/SectionWrapper.js","containers/Filter/components/SectionHeading.js","containers/Filter/components/Radio/styled.js","containers/Filter/components/Radio/index.js","containers/Filter/index.js","selectors/image.js","pages/Home/index.js","pages/Edit/components/Wrapper.js","pages/Edit/components/Form/styled.js","pages/Edit/components/Form/validationSchema.js","pages/Edit/components/Form/index.js","pages/Edit/index.js","components/OverlayWithSpinner/styled.js","components/OverlayWithSpinner/index.js","containers/TopLevelOverlayWithSpinner/index.js","style/GlobalStyle.js","reducers/index.js","reducers/image.js","reducers/spinner.js","store.js","index.js","App.js"],"names":["search","params","axios","get","concat","queryString","stringify","delay_promise","period","Promise","resolve","setTimeout","mapDispatchToProps","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","keyword","searchRes","rawItems","parsedItems","wrap","_context","prev","next","type","imageServices","q","sent","data","collection","items","map","item","id","nasa_id","thumbnailUrl","links","href","photographer","dateCreated","date_created","title","descr","description","isFavorite","payload","t0","stop","_x","apply","this","arguments","connect","state","isLoading","image","hasData","props","children","useEffect","react_default","createElement","Container","fluid","Row","Col","xs","ImageCard","styled","div","_templateObject","ThumbnailWrapper","_templateObject2","Thumbnail","img","_templateObject3","PhotographerAndDateCreated","_templateObject4","Photographer","span","_templateObject5","DateCreated","_templateObject6","Title","_templateObject7","Descr","_templateObject8","ActionBtnsWrapper","_templateObject9","ActionBtn","_templateObject10","is","_templateObject11","isNot","_templateObject12","markAsFavorite","imageId","removeFavorite","remove","editUrl","handleMarkImageAsFavorite","useCallback","handleRemoveFavorite","handleRemoveImage","assign","onClick","fa","as","Link","to","modal","components_ImageCard","formattedDateCreated","format","Date","src","containers_ActionBtns","Wrapper_templateObject","ImageListWrapper_templateObject","Wrapper","components_Wrapper_templateObject","SectionWrapper_templateObject","SectionHeading_templateObject","Radio","styled_templateObject","Icon","styled_templateObject2","Item","styled_templateObject3","styled_templateObject4","components_Radio","options","selectedValue","onChange","Radio_styled","option","key","value","undefined","active","label","withRouter","sortType","history","components_Wrapper","SectionWrapper","SectionHeading","sortTypeName","push","pathname","filteredItemsSelector","filteredItems","filter","_ref3","_ref3$sortType","_ref3$page","page","_ref3$itemPerPage","itemPerPage","_ref4","_callee3","_context3","delay","abrupt","_x3","allImages","images","location","currentQuery","parse","Filter","ImageListWrapper","md","Edit_components_Wrapper_templateObject","Form","form","Form_styled_templateObject","Heading","Form_styled_templateObject2","Group","Form_styled_templateObject3","Label","Form_styled_templateObject4","RequiredMark","styled_templateObject5","SuccessMessage","styled_templateObject6","InvalidMsg","styled_templateObject7","TextInput","input","attrs","styled_templateObject8","styled_templateObject9","Textarea","textarea","styled_templateObject10","styled_templateObject11","SubmitBtn","button","styled_templateObject12","Yup","shape","required","memo","onSubmit","formik_esm","validationSchema","initialValues","isInitialValid","isValidSync","values","actions","then","setStatus","message","setSubmitting","errors","isValid","isSubmitting","status","objectWithoutProperties","Form_styled","FormikForm","name","render","_ref2","field","htmlFor","invalid","component","placeholder","disabled","Edit","updateImage","size","offset","Edit_components_Wrapper","components_Form","_callee2","_context2","_x2","ownProps","match","foundImage","find","stateProps","dispatchProps","objectSpread","OverlayWithSpinner","OverlayWithSpinner_styled_templateObject","_bgColor","defaultProps","components_OverlayWithSpinner","OverlayWithSpinner_styled","Spinner","color","TopLevelOverlayWithSpinner","isSpinnerDisplayed","spinner","isDisplayed","createGlobalStyle","GlobalStyle_templateObject","rootPersistConfig","storage","whitelist","rootReducer","combineReducers","length","isError","action","update","$set","$merge","prevItems","foundItemIndex","findIndex","defineProperty","$splice","cloneDeep","sort","b","toLowerCase","slice","persistReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","persistor","persistStore","ReactDOM","es","integration_react","loading","styled_components_browser_esm","theme","breakpoints","sm","lg","xl","Fragment","Helmet","defaultTitle","GlobalStyle","HashRouter","Route","containers_Layout","Switch","exact","path","Home","containers_TopLevelOverlayWithSpinner","document","getElementById"],"mappings":"+TAKaA,EAAS,SAACC,GAAD,OAAYC,IAAMC,IAAN,GAAAC,OCLC,8BDKD,YAAAA,OAA2CC,IAAYC,UAAUL,MELpFM,EAAA,SAACC,GAAD,OAAY,IAAIC,QAAQ,SAAAC,GACrCC,WAAW,WACTD,KACCF,MCsCCI,EAAqB,CACzBZ,OCpCoB,SAACC,GAAD,sBAAAY,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAY,SAAAC,EAAOC,GAAP,IAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAR,EAAAC,EAAAQ,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAE9BP,EACEpB,EADFoB,QAGFD,EAAS,CACPS,KCZ0B,yBDe5BT,EEbgC,CAChCS,KCHkB,iBHMcH,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAYNE,EAAqB,CAAEC,EAAGV,IAZpB,OAYxBC,EAZwBI,EAAAM,KAaxBT,EAAWD,EAAUW,KAAKC,WAAWC,MACrCX,EAAcD,EAASa,IAAI,SAAAC,GAC/B,MAAO,CACLC,GAAID,EAAKJ,KAAK,GAAGM,QACjBC,aAAcH,EAAKI,MAAM,GAAGC,KAC5BC,aAAcN,EAAKJ,KAAK,GAAGU,aAC3BC,YAAaP,EAAKJ,KAAK,GAAGY,aAC1BC,MAAOT,EAAKJ,KAAK,GAAGa,MACpBC,MAAOV,EAAKJ,KAAK,GAAGe,YACpBC,YAAY,KAIhB7B,EAAS,CACPS,KChCwB,uBDiCxBqB,QAAS1B,IAGXJ,EE/B8B,CAChCS,KCNkB,iBHKcH,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAyB,GAAAzB,EAAA,SAiC9BN,EAAS,CACPS,KCtCwB,yBDyC1BT,EErC8B,CAChCS,KCNkB,iBHKc,yBAAAH,EAAA0B,SAAAjC,EAAA,kBAAZ,gBAAAkC,GAAA,OAAAxC,EAAAyC,MAAAC,KAAAC,YAAA,KDuCPC,cATS,SAAAC,GAAK,MAAK,CAChCC,UAAWD,EAAME,MAAMD,UACvBE,QAASH,EAAME,MAAMC,UAOiBjD,EAAzB6C,CApCA,SAAAK,GAAS,IAEpBC,EAIED,EAJFC,SACAF,EAGEC,EAHFD,QACA7D,EAEE8D,EAFF9D,OACA2D,EACEG,EADFH,UAWF,OARAK,oBAAU,WACHH,GACH7D,EAAO,CACLqB,QAAS,QAGZ,IAECsC,EAAkB,KAEfM,EAAAhD,EAAAiD,cAACC,EAAA,EAAD,CAAWC,OAAK,GACrBH,EAAAhD,EAAAiD,cAACG,EAAA,EAAD,KACEJ,EAAAhD,EAAAiD,cAACI,EAAA,EAAD,CAAKC,GAAI,IACNR,4lEK3BT,IAAMS,EAAYC,IAAOC,IAAVC,KAMfH,EAAUI,iBAAmBH,IAAOC,IAApCG,KAOAL,EAAUM,UAAYL,IAAOM,IAA7BC,KAQAR,EAAUS,2BAA6BR,IAAOC,IAA9CQ,KAOAV,EAAUW,aAAeV,IAAOW,KAAhCC,KAEAb,EAAUc,YAAcb,IAAOW,KAA/BG,KAEAf,EAAUgB,MAAQf,IAAOC,IAAzBe,KASAjB,EAAUkB,MAAQjB,IAAOC,IAAzBiB,KAWAnB,EAAUoB,kBAAoBnB,IAAOC,IAArCmB,KAKArB,EAAUsB,UAAYrB,IAAOC,IAA7BqB,IAoBMC,YAAG,aAAHA,CApBNC,KA4BMC,YAAM,aAANA,CA5BNC,MAoCe3B,yBC7CT5D,EAAqB,CACzBwF,eLL4B,SAACC,GAAD,MAAc,CAC1CxE,KC5C8B,yBD6C9BqB,QAAS,CAAEmD,aKIXC,eLD4B,SAACD,GAAD,MAAc,CAC1CxE,KChD6B,wBDiD7BqB,QAAS,CAAEmD,aKAXE,OLGoB,SAACF,GAAD,MAAc,CAClCxE,KCpDoB,eDqDpBqB,QAAS,CAAEmD,cKFE5C,cAAQ,KAAM7C,EAAd6C,CA9CI,SAAAK,GAAS,IAExBxB,EAKEwB,EALFxB,GACAW,EAIEa,EAJFb,WACAmD,EAGEtC,EAHFsC,eACAE,EAEExC,EAFFwC,eACAC,EACEzC,EADFyC,OAGIC,EAAO,SAAApG,OAAYkC,GAGnBmE,EAA4BC,sBAAY,kBAAMN,EAAe9D,IAAK,IAClEqE,EAAuBD,sBAAY,kBAAMJ,EAAehE,IAAK,IAC7DsE,EAAoBF,sBAAY,kBAAMH,EAAOjE,IAAK,IAExD,OAAO2B,EAAAhD,EAAAiD,cAACO,EAAUmB,kBAAX,KACJ3C,EACGgB,EAAAhD,EAAAiD,cAACO,EAAUqB,UAAXhF,OAAA+F,OAAA,CAAqBC,QAASH,GAA0B,CAAE1D,eAC1DgB,EAAAhD,EAAAiD,cAAC6C,EAAA,EAAD,OAEA9C,EAAAhD,EAAAiD,cAACO,EAAUqB,UAAX,CAAqBgB,QAASL,GAC9BxC,EAAAhD,EAAAiD,cAAC6C,EAAA,EAAD,OAIJ9C,EAAAhD,EAAAiD,cAACO,EAAUqB,UAAX,CAAqBgB,QAASF,GAC5B3C,EAAAhD,EAAAiD,cAAC6C,EAAA,EAAD,OAGF9C,EAAAhD,EAAAiD,cAACO,EAAUqB,UAAX,CACEkB,GAAIC,IACJC,GAAIV,EACJ9C,MAAO,CAAEyD,OAAO,IAEhBlD,EAAAhD,EAAAiD,cAAC6C,EAAA,EAAD,UCrCSK,EAAA,SAAAtD,GAAS,IAEpBxB,EAOEwB,EAPFxB,GACAE,EAMEsB,EANFtB,aACAG,EAKEmB,EALFnB,aACAC,EAIEkB,EAJFlB,YACAE,EAGEgB,EAHFhB,MACAC,EAEEe,EAFFf,MACAE,EACEa,EADFb,WAGIoE,EAAuBC,iBAAO,IAAIC,KAAK3E,GAAc,cAE3D,OAAOqB,EAAAhD,EAAAiD,cAACO,EAAD,KACLR,EAAAhD,EAAAiD,cAACO,EAAUG,iBAAX,KACEX,EAAAhD,EAAAiD,cAACO,EAAUK,UAAX,CAAqB0C,IAAKhF,KAG5ByB,EAAAhD,EAAAiD,cAACO,EAAUQ,2BAAX,KACEhB,EAAAhD,EAAAiD,cAACO,EAAUU,aAAX,KAAyBxC,GAEzBsB,EAAAhD,EAAAiD,cAACO,EAAUa,YAAX,KAAwB+B,IAG1BpD,EAAAhD,EAAAiD,cAACO,EAAUe,MAAX,KAAkB1C,GAElBmB,EAAAhD,EAAAiD,cAACO,EAAUiB,MAAX,KAAkB3C,GAElBkB,EAAAhD,EAAAiD,cAACuD,EAAe,CAAEnF,KAAIW,uICnCXwB,UAAOC,IAAtBgD,qGCAejD,UAAOC,IAAtBiD,0OCAA,IASeC,GATCnD,IAAOC,IAAVmD,sMCAEpD,WAAOC,IAAtBoD,2HCAerD,WAAOC,IAAtBqD,w8BCCA,IAAMC,GAAQvD,IAAOC,IAAVuD,MAIXD,GAAME,KAAOzD,IAAOC,IAApByD,MAoBAH,GAAMI,KAAO3D,IAAOC,IAApB2D,KAQIrC,YAAG,SAAHA,CARJsC,KASMN,GAAME,OAkBGF,UClDAO,GAAA,SAAAzE,GAAS,IAEpB0E,EAGE1E,EAHF0E,QACAC,EAEE3E,EAFF2E,cACAC,EACE5E,EADF4E,SAGF,OAAOzE,EAAAhD,EAAAiD,cAACyE,GAAD,KACJH,EAAQpG,IAAI,SAAAwG,GAAM,OAAI3E,EAAAhD,EAAAiD,cAACyE,GAAMP,KAAP,CACrBS,IAAKD,EAAOE,MACZhC,QAAS2B,IAAkBG,EAAOE,WAAQC,EAAW,kBAAML,EAASE,EAAOE,QAC3EE,OAAQP,IAAkBG,EAAOE,OAEjC7E,EAAAhD,EAAAiD,cAACyE,GAAMT,KAAP,CAAYc,OAAQP,IAAkBG,EAAOE,QAE7C7E,EAAAhD,EAAAiD,cAAA,YAAO0E,EAAOK,YCVLC,gBAAW,SAACpF,GAAU,IAEjCqF,EAEErF,EAFFqF,SACAC,EACEtF,EADFsF,QAUF,OAAOnF,EAAAhD,EAAAiD,cAACmF,GAAD,KACPpF,EAAAhD,EAAAiD,cAACoF,GAAD,KACErF,EAAAhD,EAAAiD,cAACqF,GAAD,kBAEAtF,EAAAhD,EAAAiD,cAACqE,GAAD,CACEC,QAAS,CAAC,CACRS,MAAO,SACPH,MAAO,UACN,CACDG,MAAO,SACPH,MAAO,UACN,CACDG,MAAO,cACPH,MAAO,WACN,CACDG,MAAO,cACPH,MAAO,YAETL,cAAeU,EACfT,SA1ByB,SAACc,GAC5BJ,EAAQK,KAAK,CACXC,SAAU,IACV1J,OAAM,aAAAI,OAAeoJ,YCfdG,WAAwB,SAAAjG,GAAK,OAAIA,EAAME,MAAMgG,gBCwDpDhJ,GAAqB,CACzBiJ,OhBoBoB,SAAAC,GAAA,IAAAC,EAAAD,EACpBX,gBADoB,IAAAY,EACT,SADSA,EAAAC,EAAAF,EAEpBG,YAFoB,IAAAD,EAEb,EAFaA,EAAAE,EAAAJ,EAGpBK,mBAHoB,IAAAD,EAGN,GAHMA,EAAA,sBAAAE,EAAAtJ,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAIhB,SAAAmJ,EAAOjJ,GAAP,OAAAJ,EAAAC,EAAAQ,KAAA,SAAA6I,GAAA,cAAAA,EAAA3I,KAAA2I,EAAA1I,MAAA,cACJR,EEnFgC,CAChCS,KCHkB,iBHuFlBT,EAAS,CACPS,KC9EkB,eD+ElBqB,QAAS,CACPiG,WACAc,OACAE,iBARAG,EAAA1I,KAAA,EAYE2I,EAAM,KAZR,cAcJnJ,EE5FgC,CAChCS,KCNkB,iBHmFdyI,EAAAE,OAAA,kCAAAF,EAAAlH,SAAAiH,MAJgB,gBAAAI,GAAA,OAAAL,EAAA9G,MAAAC,KAAAC,YAAA,KgBjBPC,eAVS,SAAAC,GAAK,MAAK,CAChCG,QAASH,EAAME,MAAMC,QACrB6G,UAAWhH,EAAME,MAAMzB,MACvBwI,OAAQhB,GAAsBjG,KAOQ9C,GAAzB6C,CA9CF,SAAAK,GAOPA,EALFD,QAFkB,IAGlB6G,EAIE5G,EAJF4G,UACAC,EAGE7G,EAHF6G,OACAC,EAEE9G,EAFF8G,SACAf,EACE/F,EADF+F,OAGIgB,EAAexK,IAAYyK,MAAMF,EAAS5K,QAMhD,OAJAgE,oBAAU,WACR6F,EAAOgB,IACN,CAAED,EAAUF,IAERzG,EAAAhD,EAAAiD,cAAC0D,EAAD,KACL3D,EAAAhD,EAAAiD,cAACG,EAAA,EAAD,KACEJ,EAAAhD,EAAAiD,cAACI,EAAA,EAAD,CAAKC,GAAI,GACPN,EAAAhD,EAAAiD,cAAC6G,GAAD,CACE5B,SAAU0B,EAAa1B,UAAY,YAIvClF,EAAAhD,EAAAiD,cAACI,EAAA,EAAD,CAAKC,GAAI,GACPN,EAAAhD,EAAAiD,cAAC8G,EAAD,KACE/G,EAAAhD,EAAAiD,cAACG,EAAA,EAAD,KACGsG,EAAOvI,IAAI,SAAAwB,GAAK,OAAIK,EAAAhD,EAAAiD,cAACI,EAAA,EAAD,CAAKuE,IAAKjF,EAAMtB,GAAI2I,GAAI,GAC3ChH,EAAAhD,EAAAiD,cAACkD,EAAcxD,+IC1Cda,WAAOC,IAAtBwG,g0DCCA,IAAMC,GAAO1G,IAAO2G,KAAVC,MAEVF,GAAKG,QAAU7G,IAAOC,IAAtB6G,MAKAJ,GAAKK,MAAQ/G,IAAOC,IAApB+G,MAIAN,GAAKO,MAAQjH,IAAOwE,MAApB0C,MAIAR,GAAKS,aAAenH,IAAOW,KAA3ByG,MAIAV,GAAKW,eAAiBrH,IAAOC,IAA7BqH,MASAZ,GAAKa,WAAavH,IAAOC,IAAzBuH,MAMAd,GAAKe,UAAYzH,IAAO0H,MAAMC,MAAM,CAAEvK,KAAM,QAA3B4C,CAAjB4H,KAaIrG,YAAG,UAAHA,CAbJsG,OAkBAnB,GAAKoB,SAAW9H,IAAO+H,SAAvBC,KAYIzG,YAAG,UAAHA,CAZJ0G,OAiBAvB,GAAKwB,UAAYlI,IAAOmI,OAAOR,MAAM,CAAEvK,KAAM,UAA5B4C,CAAjBoI,MAae1B,mBCnFA2B,eACZC,MAAM,CACLjK,MAAOgK,YAAaE,SAAS,YAC7BjK,MAAO+J,YAAaE,SAAS,YAC7BrK,aAAcmK,cCGHG,kBAAK,SAAAnJ,GAAS,IAEzB7B,EAEE6B,EAFF7B,KACAiL,EACEpJ,EADFoJ,SAGF,OAAOjJ,EAAAhD,EAAAiD,cAACiJ,GAAA,EAAD,CACLC,iBAAkBA,GAClBC,cAAepL,EACfqL,eAAgBF,GAAiBG,YAAYtL,GAC7CiL,SAAU,SAACM,EAAQC,GACjBP,EAASjL,EAAKK,GAAIkL,GACfE,KAAK,WACJD,EAAQE,UAAU,CAAEC,QAAS,wBAE7BH,EAAQI,eAAc,KAEvBH,KAAK,kBAAMnD,EAAM,OACjBmD,KAAK,kBAAMD,EAAQE,UAAU,CAAEC,aAAS7E,QAG5C,SAAAlI,GAA6D,IAA1DiN,EAA0DjN,EAA1DiN,OAAQC,EAAkDlN,EAAlDkN,QAASC,EAAyCnN,EAAzCmN,aAAcC,EAA2BpN,EAA3BoN,OAA2BnN,OAAAoN,GAAA,EAAApN,CAAAD,EAAA,8CAC5D,OAAOoD,EAAAhD,EAAAiD,cAACiK,GAAD,CAAMnH,GAAIoH,MAChBH,GAAUA,EAAOL,SAAW3J,EAAAhD,EAAAiD,cAACiK,GAAKrC,eAAN,KAAsBmC,EAAOL,SAE1D3J,EAAAhD,EAAAiD,cAACiJ,GAAA,EAAD,CACEkB,KAAK,QACLC,OACE,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,MAAH,OAAevK,EAAAhD,EAAAiD,cAACiK,GAAK3C,MAAN,KACbvH,EAAAhD,EAAAiD,cAACiK,GAAKzC,MAAN,CAAY+C,QAAQ,YAApB,QAGExK,EAAAhD,EAAAiD,cAACiK,GAAKvC,aAAN,WAGF3H,EAAAhD,EAAAiD,cAACiK,GAAKjC,UAANpL,OAAA+F,OAAA,CACEvE,GAAG,WACHoM,UAAWZ,EAAOhL,OACd0L,IAGNvK,EAAAhD,EAAAiD,cAACiJ,GAAA,EAAD,CAAckB,KAAK,QAAQM,UAAWxD,GAAKa,iBAKjD/H,EAAAhD,EAAAiD,cAACiJ,GAAA,EAAD,CACEkB,KAAK,QACLO,YAAY,gBACZF,UAAWZ,EAAO/K,MAClBuL,OACE,SAAAxE,GAAA,IAAG0E,EAAH1E,EAAG0E,MAAH,OAAevK,EAAAhD,EAAAiD,cAACiK,GAAK3C,MAAN,KACbvH,EAAAhD,EAAAiD,cAACiK,GAAKzC,MAAN,CAAY+C,QAAQ,YAApB,cAGExK,EAAAhD,EAAAiD,cAACiK,GAAKvC,aAAN,WAGF3H,EAAAhD,EAAAiD,cAACiK,GAAK5B,SAANzL,OAAA+F,OAAA,CACEvE,GAAG,WACHoM,UAAWZ,EAAO/K,OACdyL,IAGNvK,EAAAhD,EAAAiD,cAACiJ,GAAA,EAAD,CAAckB,KAAK,QAAQM,UAAWxD,GAAKa,iBAKjD/H,EAAAhD,EAAAiD,cAACiJ,GAAA,EAAD,CACEkB,KAAK,eACLO,YAAY,eACZF,UAAWZ,EAAOnL,aAClB2L,OACE,SAAAlE,GAAA,IAAGoE,EAAHpE,EAAGoE,MAAH,OAAevK,EAAAhD,EAAAiD,cAACiK,GAAK3C,MAAN,KACbvH,EAAAhD,EAAAiD,cAACiK,GAAKzC,MAAN,CAAY+C,QAAQ,mBAApB,eAEAxK,EAAAhD,EAAAiD,cAACiK,GAAKjC,UAANpL,OAAA+F,OAAA,CACEvE,GAAG,mBACCkM,QAMZvK,EAAAhD,EAAAiD,cAACiK,GAAKxB,UAAN,CAAgBkC,UAAWd,GAAWC,GAAtC,aCnFAc,GAAO7B,eAAK,SAAAnJ,GAKZA,EAHFuC,QAFuB,IAGvBzC,EAEEE,EAFFF,MACAmL,EACEjL,EADFiL,YAGF,OAAO9K,EAAAhD,EAAAiD,cAACG,EAAA,EAAD,KACLJ,EAAAhD,EAAAiD,cAACI,EAAA,EAAD,CAAKC,GAAI,CAAEyK,KAAM,EAAGC,OAAQ,IAC1BhL,EAAAhD,EAAAiD,cAACgL,GAAD,KACEjL,EAAAhD,EAAAiD,cAACiL,GAAD,CACElN,KAAM2B,EACNsJ,SAAU6B,SAiBdnO,GAAqB,CACzBmO,YrBqBoB,SAAC1I,EAASpE,GAAV,sBAAAsM,EAAAzN,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAmB,SAAAkO,EAAOhO,GAAP,OAAAJ,EAAAC,EAAAQ,KAAA,SAAA4N,GAAA,cAAAA,EAAA1N,KAAA0N,EAAAzN,MAAA,cACvCR,EE7DgC,CAChCS,KCHkB,iBHiElBT,EAAS,CACPS,KC1DkB,eD2DlBqB,QAAS,CACPmD,UACApE,UAPmCoN,EAAAzN,KAAA,EAWjC2I,EAAM,KAX2B,cAavCnJ,EErEgC,CAChCS,KCNkB,iBH6DqBwN,EAAA7E,OAAA,kCAAA6E,EAAAjM,SAAAgM,MAAnB,gBAAAE,GAAA,OAAAf,EAAAjL,MAAAC,KAAAC,YAAA,KqBbPC,eAnBS,SAACC,EAAO6L,GAC9B,IAAMlJ,EAAUkJ,EAASC,MAAMvP,OAAOoG,QAChCoJ,EAAa/L,EAAME,MAAMzB,MAAMuN,KAAK,SAAArN,GAAI,OAAIA,EAAKC,KAAO+D,IAE9D,MAAO,CACLA,UACAzC,MAAO6L,IAa6B7O,GALrB,SAAC+O,EAAYC,GAAb,OAAA9O,OAAA+O,GAAA,EAAA/O,CAAA,GACd6O,EACAC,IAGUnM,CAAyDqL,uQC/CxE,IAAMgB,GAAqBrL,IAAOC,IAAVqL,KAUR,SAAAjM,GAAK,OAAIA,EAAMkM,WAG/BF,GAAmBG,aAAe,CAChCD,SAAU,sBAGGF,oBCdAI,GAAA,SAAApM,GAAS,IAEpBkM,EACElM,EADFkM,SAGF,OAAO/L,EAAAhD,EAAAiD,cAACiM,GAAuB,CAAEH,YAC/B/L,EAAAhD,EAAAiD,cAACkM,GAAA,EAAD,CAASC,MAAM,WCNbC,GAA6BrD,eAAK,SAAAnJ,GAAK,OAAIA,EAAMyM,oBAAsBtM,EAAAhD,EAAAiD,cAACgM,GAAD,QAE9DzM,eACb,SAAAC,GAAK,MAAK,CAAE6M,mBAAoB7M,EAAM8M,QAAQC,cADjChN,CAEb6M,qRCPaI,mBAAfC,8FCMMC,GAAoB,CACxB/H,IAAK,cACLgI,aACAC,UAAW,CAAE,UAGTC,GAAcC,aAAgB,CAClCpN,MCVa,WASV,IARHF,EAQGF,UAAAyN,OAAA,QAAAlI,IAAAvF,UAAA,GAAAA,UAAA,GARK,CACNrB,MAAO,GACPyH,cAAe,GACfjG,WAAW,EACXuN,SAAS,EACTrN,SAAS,GAEXsN,EACG3N,UAAAyN,OAAA,EAAAzN,UAAA,QAAAuF,EACKlH,EAAkBsP,EAAlBtP,KAAMqB,EAAYiO,EAAZjO,QAEd,OAAQrB,GACN,I1BlB0B,uB0BmBxB,OAAOuP,KAAO1N,EAAO,CACnBC,UAAW,CAAE0N,MAAM,KAIvB,I1BvB0B,uB0BwBxB,OAAOD,KAAO1N,EAAO,CACnB4N,OAAQ,CACNnP,MAAOe,EACPS,WAAW,EACXE,SAAS,KAKf,I1BhC0B,uB0BiCxB,OAAOuN,KAAO1N,EAAO,CACnBC,UAAW,CAAE0N,MAAM,GACnBH,QAAS,CAAEG,MAAM,KAIrB,I1BrC4B,yB0BsC1B,OAAOD,KAAO1N,EAAO,CACnBvB,MAAO,SAAAoP,GACL,IAAMC,EAAiBD,EAAUE,UAAU,SAAApP,GAAI,OAAIA,EAAKC,KAAOY,EAAQmD,UAEvE,OAAO+K,KAAOG,EAADzQ,OAAA4Q,GAAA,EAAA5Q,CAAA,GACV0Q,EAAiB,CAChBvO,WAAY,CAAEoO,MAAM,SAO9B,I1BlD2B,wB0BmDzB,OAAOD,KAAO1N,EAAO,CACnBvB,MAAO,SAAAoP,GACL,IAAMC,EAAiBD,EAAUE,UAAU,SAAApP,GAAI,OAAIA,EAAKC,KAAOY,EAAQmD,UAEvE,OAAO+K,KAAOG,EAADzQ,OAAA4Q,GAAA,EAAA5Q,CAAA,GACV0Q,EAAiB,CAChBvO,WAAY,CAAEoO,MAAM,SAO9B,I1B/DkB,e0BgEhB,OAAOD,KAAO1N,EAAO,CACnBvB,MAAO,SAAAoP,GACL,IAAMC,EAAiBD,EAAUE,UAAU,SAAApP,GAAI,OAAIA,EAAKC,KAAOY,EAAQmD,UAEvE,OAAO+K,KAAOG,EAAW,CACvBI,QAAS,CAAE,CAAEH,EAAgB,SAMrC,I1BzEkB,e0B0EhB,OAAOJ,KAAO1N,EAAO,CACnBvB,MAAO,SAAAoP,GACL,IAAMC,EAAiBD,EAAUE,UAAU,SAAApP,GAAI,OAAIA,EAAKC,KAAOY,EAAQmD,UAEvE,OAAO+K,KAAOG,EAADzQ,OAAA4Q,GAAA,EAAA5Q,CAAA,GACV0Q,EAAiB,CAAEF,OAAQpO,EAAQjB,WAM5C,I1BnFkB,e0BoFhB,OAAOmP,KAAO1N,EAAO,CACnBkG,cAAe,WACb,IAAIA,EAAgBgI,aAAUlO,EAAMvB,OAEpC,OAAQe,EAAQiG,UACd,IAAK,SACHS,EAAciI,KAAK,SAAC5Q,EAAI6Q,GACtB,OAAI7Q,EAAE2B,YAAckP,EAAElP,YACb,EAGL3B,EAAE2B,YAAckP,EAAElP,aACZ,EAGH,IAGT,MAGF,IAAK,UACHgH,EAAciI,KAAK,SAAC5Q,EAAI6Q,GACtB,OAAI7Q,EAAE6B,MAAMiP,cAAgBD,EAAEhP,MAAMiP,cAC3B,EAGL9Q,EAAE6B,MAAMiP,cAAgBD,EAAEhP,MAAMiP,eAC1B,EAGH,IAGT,MAGF,IAAK,UACHnI,EAAciI,KAAK,SAAC5Q,EAAI6Q,GACtB,OAAI7Q,EAAE6B,MAAMiP,cAAgBD,EAAEhP,MAAMiP,cAC3B,EAGL9Q,EAAE6B,MAAMiP,cAAgBD,EAAEhP,MAAMiP,eAC1B,EAGH,IAGT,MAGF,QACEnI,EAAciI,KAAK,SAAC5Q,EAAI6Q,GACtB,OAAI7Q,EAAE2B,YAAckP,EAAElP,YACb,EAGL3B,EAAE2B,YAAckP,EAAElP,aACZ,EAGH,IAKb,OAAOgH,EACJoI,OAAO9O,EAAQ+G,KAAO,GAAK/G,EAAQiH,YAAajH,EAAQiH,gBAKjE,QACE,OAAOzG,IDzJX8M,QEZa,WAKV,IAJH9M,EAIGF,UAAAyN,OAAA,QAAAlI,IAAAvF,UAAA,GAAAA,UAAA,GAJK,CACNiN,aAAa,GAMf,QAHGjN,UAAAyN,OAAA,EAAAzN,UAAA,QAAAuF,GACKlH,MAGN,IzBbgB,eyBcd,OAAOuP,KAAO1N,EAAO,CACnB+M,YAAa,CAAEY,MAAM,KAIzB,IzBlBgB,eyBmBd,OAAOD,KAAO1N,EAAO,CACnB+M,YAAa,CAAEY,MAAM,KAIzB,QACE,OAAO3N,MFPEuO,gBAAerB,GAAmBG,IGd3CmB,GAAmBC,OAAOC,sCAAwCC,KAE3DC,GAAQC,aACnBxB,GACAmB,GACEM,aAAgBC,QAIPC,GAAYC,aAAaL,ICVtCM,IAAStE,OAAOrK,EAAAhD,EAAAiD,cCqBD,SAAAJ,GAAK,OAAIG,EAAAhD,EAAAiD,cAAC2O,EAAA,EAAD,CAAUP,MAAOA,IACvCrO,EAAAhD,EAAAiD,cAAC4O,EAAA,EAAD,CACEC,QAAS9O,EAAAhD,EAAAiD,cAAA,0BACTwO,UAAWA,IAEXzO,EAAAhD,EAAAiD,cAAC8O,EAAA,EAAD,CAAeC,MAAO,CACpBC,YAAa,CACXC,GAAI,QACJlI,GAAI,QACJmI,GAAI,QACJC,GAAI,YAGNpP,EAAAhD,EAAAiD,cAAAD,EAAAhD,EAAAqS,SAAA,KACErP,EAAAhD,EAAAiD,cAACqP,EAAA,OAAD,CAAQC,aAAa,gBAErBvP,EAAAhD,EAAAiD,cAACuP,GAAD,MAEAxP,EAAAhD,EAAAiD,cAACwP,EAAA,EAAD,KACEzP,EAAAhD,EAAAiD,cAACyP,EAAA,EAAD,CAAOrF,OAAQ,SAAAxK,GAAK,OAAIG,EAAAhD,EAAAiD,cAAC0P,EAAW9P,EAClCG,EAAAhD,EAAAiD,cAAC2P,EAAA,EAAD,KACE5P,EAAAhD,EAAAiD,cAACyP,EAAA,EAAD,CAAOG,OAAK,EAACC,KAAK,IAAIpF,UAAWqF,KAEjC/P,EAAAhD,EAAAiD,cAACyP,EAAA,EAAD,CAAOG,OAAK,EAACC,KAAK,iBAAiBpF,UAAWG,WAKpD7K,EAAAhD,EAAAiD,cAAC+P,GAAD,WDjDQ,MAASC,SAASC,eAAe","file":"static/js/main.e018e812.chunk.js","sourcesContent":["import axios from 'axios'\r\nimport queryString from 'query-string'\r\n\r\nimport { NASA_IMAGES_API_URL } from 'constants/app'\r\n\r\nexport const search = (params) => axios.get(`${NASA_IMAGES_API_URL}/search?${queryString.stringify(params)}`)","export const NASA_IMAGES_API_URL = 'https://images-api.nasa.gov'","export default (period) => new Promise(resolve => {\r\n  setTimeout(() => {\r\n    resolve()\r\n  }, period)\r\n})","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\n// Components\r\nimport { Container, Row, Col } from 'reactstrap'\r\n\r\n// Actions\r\nimport { search } from 'actions/image'\r\n\r\nconst Layout = props => {\r\n  const {\r\n    children,\r\n    hasData,\r\n    search,\r\n    isLoading\r\n  } = props\r\n\r\n  useEffect(() => {\r\n    if (!hasData) {\r\n      search({\r\n        keyword: '\"\"'\r\n      })\r\n    }\r\n  }, [])\r\n\r\n  if (isLoading) return null\r\n\r\n  return <Container fluid>\r\n    <Row>\r\n      <Col xs={12}>\r\n        {children}\r\n      </Col>\r\n    </Row>\r\n  </Container>\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isLoading: state.image.isLoading,\r\n  hasData: state.image.hasData\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  search\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Layout)","import * as spinnerActions from 'actions/spinner'\r\nimport * as imageActionTypes from 'constants/image'\r\nimport * as imageServices from 'services/image'\r\n\r\nimport delay from 'utils/delay-promise'\r\n\r\nexport const search = (params) => async (dispatch) => {\r\n  const {\r\n    keyword\r\n  } = params\r\n\r\n  dispatch({\r\n    type: imageActionTypes.SEARCH_REQUEST\r\n  })\r\n\r\n  dispatch(spinnerActions.showSpinner())\r\n\r\n  try {\r\n    const searchRes = await imageServices.search({ q: keyword })\r\n    const rawItems = searchRes.data.collection.items\r\n    const parsedItems = rawItems.map(item => {  \r\n      return {\r\n        id: item.data[0].nasa_id,\r\n        thumbnailUrl: item.links[0].href,\r\n        photographer: item.data[0].photographer,\r\n        dateCreated: item.data[0].date_created,\r\n        title: item.data[0].title,\r\n        descr: item.data[0].description,\r\n        isFavorite: false\r\n      }\r\n    })\r\n\r\n    dispatch({\r\n      type: imageActionTypes.SEARCH_SUCCESS,\r\n      payload: parsedItems\r\n    })\r\n\r\n    dispatch(spinnerActions.hideSpinner())\r\n  } catch(e) {\r\n    dispatch({\r\n      type: imageActionTypes.SEARCH_FAILURE\r\n    })\r\n\r\n    dispatch(spinnerActions.hideSpinner())\r\n  }\r\n}\r\n\r\nexport const markAsFavorite = (imageId) => ({\r\n  type: imageActionTypes.MARK_AS_FAVORITE,\r\n  payload: { imageId }\r\n})\r\n\r\nexport const removeFavorite = (imageId) => ({\r\n  type: imageActionTypes.REMOVE_FAVORITE,\r\n  payload: { imageId }\r\n})\r\n\r\nexport const remove = (imageId) => ({\r\n  type: imageActionTypes.REMOVE,\r\n  payload: { imageId }\r\n})\r\n\r\nexport const update = (imageId, data) => async (dispatch) => {\r\n  dispatch(spinnerActions.showSpinner())\r\n\r\n  dispatch({\r\n    type: imageActionTypes.UPDATE,\r\n    payload: {\r\n      imageId,\r\n      data\r\n    }\r\n  })\r\n\r\n  await delay(200)\r\n\r\n  dispatch(spinnerActions.hideSpinner())\r\n\r\n  return\r\n}\r\n\r\nexport const filter = ({\r\n  sortType = 'newest',\r\n  page = 1,\r\n  itemPerPage = 18\r\n}) => async (dispatch) => {\r\n  dispatch(spinnerActions.showSpinner())\r\n  \r\n  dispatch({\r\n    type: imageActionTypes.FILTER,\r\n    payload: {\r\n      sortType,\r\n      page,\r\n      itemPerPage\r\n    }\r\n  })\r\n\r\n  await delay(200)\r\n\r\n  dispatch(spinnerActions.hideSpinner())\r\n\r\n  return\r\n}","export const SEARCH_REQUEST = 'image/SEARCH_REQUEST'\r\nexport const SEARCH_SUCCESS = 'image/SEARCH_SUCCESS'\r\nexport const SEARCH_FAILURE = 'image/SEARCH_FAILURE'\r\n\r\nexport const MARK_AS_FAVORITE = 'image/MARK_AS_FAVORITE'\r\nexport const REMOVE_FAVORITE = 'image/REMOVE_FAVORITE'\r\nexport const REMOVE = 'image/REMOVE'\r\n\r\nexport const UPDATE = 'image/UPDATE'\r\n\r\nexport const FILTER = 'image/FILTER'","import * as spinnerActionTypes from 'constants/spinner'\r\n\r\nexport const showSpinner = () => ({\r\n  type: spinnerActionTypes.SHOW\r\n})\r\n\r\nexport const hideSpinner = () => ({\r\n  type: spinnerActionTypes.HIDE\r\n})","export const SHOW = 'spinner/SHOW'\r\nexport const HIDE = 'spinner/HIDE'","import styled from 'styled-components'\r\nimport is, { isNot } from 'styled-is'\r\n\r\nconst ImageCard = styled.div`\r\n  margin-bottom: 30px;\r\n  background: rgba(0, 0, 0, 0.05);\r\n  padding: 0 15px 15px;\r\n`\r\n\r\nImageCard.ThumbnailWrapper = styled.div`\r\n  position: relative;\r\n  padding-top: 60%;\r\n  overflow: hidden;\r\n  margin: 0 -15px 1rem;\r\n`\r\n\r\nImageCard.Thumbnail = styled.img`\r\n  position: absolute;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  left: 0;\r\n  width: 100%;\r\n`\r\n\r\nImageCard.PhotographerAndDateCreated = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin-bottom: 1rem;\r\n`\r\n\r\nImageCard.Photographer = styled.span``\r\n\r\nImageCard.DateCreated = styled.span``\r\n\r\nImageCard.Title = styled.div`\r\n  font-weight: 500;\r\n  font-size: 1.25rem;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  margin-bottom: 1rem;\r\n`\r\n\r\nImageCard.Descr = styled.div`\r\n  display: -webkit-box;\r\n  line-height: 1.5rem;\r\n  height: 4.5rem;\r\n  -webkit-line-clamp: 3;\r\n  -webkit-box-orient: vertical;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  margin-bottom: 1.5rem;\r\n`\r\n\r\nImageCard.ActionBtnsWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`\r\n\r\nImageCard.ActionBtn = styled.div`\r\n  display: inline-flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 50px;\r\n  width: 50px;\r\n  border: 1px solid #cecccc;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  transition: all 0.25s;\r\n  background: white;\r\n\r\n  &:not(:last-child) {\r\n    margin-right: 12px;\r\n  }\r\n\r\n  > svg {\r\n    color: #cecccc;\r\n    font-size: 1.25em;\r\n\r\n    ${is('isFavorite')`\r\n      color: red;\r\n    `}\r\n  }\r\n\r\n  &:hover {\r\n    border-color: #b0acac;\r\n    \r\n    ${isNot('isFavorite')`\r\n      > svg {\r\n        color: #b0acac;\r\n      }\r\n    `}\r\n  }\r\n`\r\n\r\nexport default ImageCard","import React, { useCallback } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\n\r\n// Components\r\nimport ImageCard from '../styled'\r\nimport { FaRegHeart, FaHeart, FaTrashAlt, FaPen } from 'react-icons/fa'\r\n\r\n// Actions\r\nimport { markAsFavorite, removeFavorite, remove } from 'actions/image'\r\n\r\nconst ActionBtns = props => {\r\n  const {\r\n    id,\r\n    isFavorite,\r\n    markAsFavorite,\r\n    removeFavorite,\r\n    remove\r\n  } = props\r\n\r\n  const editUrl = `/edit/${id}`\r\n\r\n  // Event handlers\r\n  const handleMarkImageAsFavorite = useCallback(() => markAsFavorite(id), [])\r\n  const handleRemoveFavorite = useCallback(() => removeFavorite(id), [])\r\n  const handleRemoveImage = useCallback(() => remove(id), [])\r\n\r\n  return <ImageCard.ActionBtnsWrapper>\r\n    {isFavorite\r\n      ? <ImageCard.ActionBtn onClick={handleRemoveFavorite} {...{ isFavorite }}>\r\n        <FaHeart />\r\n      </ImageCard.ActionBtn>\r\n      : <ImageCard.ActionBtn onClick={handleMarkImageAsFavorite}>\r\n        <FaRegHeart />\r\n      </ImageCard.ActionBtn>\r\n    }\r\n\r\n    <ImageCard.ActionBtn onClick={handleRemoveImage}>\r\n      <FaTrashAlt />\r\n    </ImageCard.ActionBtn>\r\n\r\n    <ImageCard.ActionBtn\r\n      as={Link}\r\n      to={editUrl}\r\n      state={{ modal: true }}\r\n    >\r\n      <FaPen />\r\n    </ImageCard.ActionBtn>\r\n  </ImageCard.ActionBtnsWrapper>\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  markAsFavorite,\r\n  removeFavorite,\r\n  remove\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(ActionBtns)","import React from 'react'\r\nimport { format } from 'date-fns'\r\n\r\n// Componenst\r\nimport ImageCard from './styled'\r\n\r\n// Containers\r\nimport ActionBtns from './containers/ActionBtns'\r\n\r\nexport default props => {\r\n  const {\r\n    id,\r\n    thumbnailUrl,\r\n    photographer,\r\n    dateCreated,\r\n    title,\r\n    descr,\r\n    isFavorite\r\n  } = props\r\n\r\n  const formattedDateCreated = format(new Date(dateCreated), 'MM/DD/YYYY')\r\n\r\n  return <ImageCard>\r\n    <ImageCard.ThumbnailWrapper>\r\n      <ImageCard.Thumbnail src={thumbnailUrl} />\r\n    </ImageCard.ThumbnailWrapper>\r\n\r\n    <ImageCard.PhotographerAndDateCreated>\r\n      <ImageCard.Photographer>{photographer}</ImageCard.Photographer>\r\n\r\n      <ImageCard.DateCreated>{formattedDateCreated}</ImageCard.DateCreated>\r\n    </ImageCard.PhotographerAndDateCreated>\r\n\r\n    <ImageCard.Title>{title}</ImageCard.Title>\r\n\r\n    <ImageCard.Descr>{descr}</ImageCard.Descr>\r\n\r\n    <ActionBtns {...{ id, isFavorite }} />\r\n  </ImageCard>\r\n}","import styled from 'styled-components'\r\n\r\nexport default styled.div`\r\n  padding-top: 50px;\r\n  padding-bottom: 50px;\r\n`","import styled from 'styled-components'\r\n\r\nexport default styled.div`\r\n  margin-bottom: -30px;\r\n`","import styled from 'styled-components'\r\n\r\nconst Wrapper = styled.div`\r\n  padding: 40px 35px;\r\n  margin-left: -15px;\r\n  margin-right: -15px;\r\n  background: #333333;\r\n  color: white;\r\n  min-height: calc(100vh - 50px);\r\n`\r\n\r\nexport default Wrapper","import styled from 'styled-components'\r\n\r\nexport default styled.div`\r\n  &:not(:last-child) {\r\n    padding-bottom: 25px;\r\n    margin-bottom: 20px;\r\n    border-bottom: 1px solid white;\r\n  }\r\n`","import styled from 'styled-components'\r\n\r\nexport default styled.div`\r\n  font-weight: 500;\r\n  font-size: 1.15rem;\r\n`","import styled from 'styled-components'\r\nimport is from 'styled-is'\r\n\r\nconst Radio = styled.div`\r\n  margin-top: 17px;\r\n`\r\n\r\nRadio.Icon = styled.div`\r\n  width: 20px;\r\n  height: 20px;\r\n  border: 1px solid white;\r\n  border-radius: 50%;\r\n  position: relative;\r\n  margin-right: 7px;\r\n\r\n  &:before {\r\n    content: '';\r\n    position: absolute;\r\n    top: 5px;\r\n    left: 5px;\r\n    width: 8px;\r\n    height: 8px;\r\n    background: white;\r\n    border-radius: 50%;\r\n  }\r\n`\r\n\r\nRadio.Item = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  color: white;\r\n  cursor: pointer;\r\n  user-select: none;\r\n  padding-left: 8px;\r\n\r\n  ${is('active')`\r\n    ${Radio.Icon} {\r\n      border-color: #a38fc4;\r\n\r\n      &:before {\r\n        background: #a38fc4;\r\n      }\r\n    }\r\n\r\n    span {\r\n      color: #a38fc4;\r\n    }\r\n  `}\r\n\r\n  &:not(:last-child) {\r\n    margin-bottom: 8px;\r\n  }\r\n`\r\n\r\nexport default Radio","import React from 'react'\r\n\r\nimport Radio from './styled'\r\n\r\nexport default props => {\r\n  const {\r\n    options,\r\n    selectedValue,\r\n    onChange\r\n  } = props\r\n\r\n  return <Radio>\r\n    {options.map(option => <Radio.Item\r\n      key={option.value}\r\n      onClick={selectedValue === option.value ? undefined: () => onChange(option.value)}\r\n      active={selectedValue === option.value}\r\n    >\r\n      <Radio.Icon active={selectedValue === option.value} />\r\n\r\n      <span>{option.label}</span>\r\n    </Radio.Item>)}\r\n  </Radio>\r\n}","import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport { Spinner } from 'reactstrap'\r\nimport Wrapper from './components/Wrapper'\r\nimport SectionWrapper from './components/SectionWrapper'\r\nimport SectionHeading from './components/SectionHeading'\r\nimport Radio from './components/Radio'\r\n\r\nexport default withRouter((props) => {\r\n  const {\r\n    sortType,\r\n    history\r\n  } = props\r\n\r\n  const handleSortTypeChange = (sortTypeName) => {\r\n    history.push({\r\n      pathname: '/',\r\n      search: `?sortType=${sortTypeName}`\r\n    })\r\n  }\r\n\r\n  return <Wrapper>\r\n  <SectionWrapper>\r\n    <SectionHeading>Sort type</SectionHeading>\r\n\r\n    <Radio\r\n      options={[{\r\n        label: 'Newest',\r\n        value: 'newest'\r\n      }, {\r\n        label: 'Oldest',\r\n        value: 'oldest'\r\n      }, {\r\n        label: 'Title A - Z',\r\n        value: 'titleAZ'\r\n      }, {\r\n        label: 'Title Z - A',\r\n        value: 'titleZA'\r\n      }]}\r\n      selectedValue={sortType}\r\n      onChange={handleSortTypeChange}\r\n    />\r\n  </SectionWrapper>\r\n</Wrapper>\r\n})\r\n","import { createSelector } from 'reselect'\r\n\r\nexport const itemsSelector = state => state.image.items\r\nexport const filteredItemsSelector = state => state.image.filteredItems","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport queryString from 'query-string'\r\n\r\n// Components\r\nimport ImageCard from 'components/ImageCard'\r\nimport { Row, Col } from 'reactstrap'\r\nimport Wrapper from './components/Wrapper'\r\nimport ImageListWrapper from 'components/ImageListWrapper'\r\nimport Filter from 'containers/Filter'\r\n\r\n// Selectors\r\nimport { filteredItemsSelector } from 'selectors/image'\r\n\r\n// Actions\r\nimport { filter } from 'actions/image'\r\n\r\nconst Home = props => {\r\n  const {\r\n    hasData,\r\n    allImages,\r\n    images,\r\n    location,\r\n    filter\r\n  } = props\r\n\r\n  const currentQuery = queryString.parse(location.search)\r\n\r\n  useEffect(() => {\r\n    filter(currentQuery)\r\n  }, [ location, allImages ])\r\n\r\n  return <Wrapper>\r\n    <Row>\r\n      <Col xs={3}>\r\n        <Filter\r\n          sortType={currentQuery.sortType || 'newest'}\r\n        />\r\n      </Col>\r\n\r\n      <Col xs={9}>\r\n        <ImageListWrapper>\r\n          <Row>\r\n            {images.map(image => <Col key={image.id} md={4}>\r\n              <ImageCard {...image} />\r\n            </Col>)}\r\n          </Row>\r\n        </ImageListWrapper>\r\n      </Col>\r\n    </Row>\r\n  </Wrapper>\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  hasData: state.image.hasData,\r\n  allImages: state.image.items,\r\n  images: filteredItemsSelector(state)\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  filter\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)","import styled from 'styled-components'\r\n\r\nexport default styled.div`\r\n  padding-top: 50px;\r\n  padding-bottom: 50px;\r\n`","import styled from 'styled-components'\r\nimport is from 'styled-is'\r\n\r\nconst Form = styled.form``\r\n\r\nForm.Heading = styled.div`\r\n  font-size: 1.25rem;\r\n  font-weight: 500;\r\n`\r\n\r\nForm.Group = styled.div`\r\n  margin-bottom: 0.75rem;\r\n`\r\n\r\nForm.Label = styled.label`\r\n  font-size: 0.875rem;\r\n`\r\n\r\nForm.RequiredMark = styled.span`\r\n  color: red;\r\n  margin-left: 5px;\r\n`\r\nForm.SuccessMessage = styled.div`\r\n  font-size: 1.15rem;\r\n  margin-bottom: 1em;\r\n  background: #d4edda;\r\n  border-left: 4px solid #155724;\r\n  color: #155724;\r\n  padding: 15px;\r\n`\r\n\r\nForm.InvalidMsg = styled.div`\r\n  color: red;\r\n  font-size: 0.875rem;\r\n  margin-top: 0.5em;\r\n`\r\n\r\nForm.TextInput = styled.input.attrs({ type: 'text' })`\r\n  display: block;\r\n  width: 100%;\r\n  border: 1px solid #cecccc;\r\n  padding-left: 12px;\r\n  padding-right: 12px;\r\n  height: 55px;\r\n\r\n  &:focus {\r\n    border-color: #b0acac;\r\n    outline: none;\r\n  }\r\n\r\n  ${is('invalid')`\r\n    border-color: red;\r\n  `}\r\n`\r\n\r\nForm.Textarea = styled.textarea`\r\n  display: block;\r\n  width: 100%;\r\n  border: 1px solid #cecccc;\r\n  padding: 12px;\r\n  min-height: calc(15em + 26px);\r\n\r\n  &:focus {\r\n    border-color: #b0acac;\r\n    outline: none;\r\n  }\r\n\r\n  ${is('invalid')`\r\n    border-color: red;\r\n  `}\r\n`\r\n\r\nForm.SubmitBtn = styled.button.attrs({ type: 'submit' })`\r\n  height: 55px;\r\n  padding-left: 24px;\r\n  padding-right: 24px;\r\n  color: white;\r\n  border: none;\r\n  background: #784CC0;\r\n\r\n  &:disabled {\r\n    background: #a38fc4;\r\n  }\r\n`\r\n\r\nexport default Form","import * as Yup from 'yup'\r\n\r\nexport default Yup.object()\r\n  .shape({\r\n    title: Yup.string().required('Required'),\r\n    descr: Yup.string().required('Required'),\r\n    photographer: Yup.string()\r\n  })","import React, { memo } from 'react'\r\nimport { Formik, Form as FormikForm, Field, ErrorMessage } from 'formik'\r\n\r\nimport Form from './styled'\r\n\r\nimport validationSchema from './validationSchema'\r\n\r\nimport delay from 'utils/delay-promise'\r\n\r\nexport default memo(props => {\r\n  const {\r\n    data,\r\n    onSubmit\r\n  } = props\r\n\r\n  return <Formik\r\n    validationSchema={validationSchema}\r\n    initialValues={data}\r\n    isInitialValid={validationSchema.isValidSync(data)}\r\n    onSubmit={(values, actions) => {\r\n      onSubmit(data.id, values)\r\n        .then(() => {\r\n          actions.setStatus({ message: \"Update successfully\" })\r\n\r\n          actions.setSubmitting(false)\r\n        })\r\n        .then(() => delay(2000))\r\n        .then(() => actions.setStatus({ message: undefined }))\r\n    }}\r\n  >\r\n    {({ errors, isValid, isSubmitting, status, ...restProps }) => {\r\n      return <Form as={FormikForm}>\r\n      {status && status.message && <Form.SuccessMessage>{status.message}</Form.SuccessMessage>}\r\n\r\n      <Field\r\n        name=\"title\"\r\n        render={\r\n          ({ field }) => <Form.Group>\r\n            <Form.Label htmlFor=\"title-id\">\r\n              Title\r\n\r\n              <Form.RequiredMark>*</Form.RequiredMark>\r\n            </Form.Label>\r\n\r\n            <Form.TextInput\r\n              id=\"title-id\"\r\n              invalid={!!errors.title}\r\n              {...field}\r\n            />\r\n\r\n            <ErrorMessage name=\"title\" component={Form.InvalidMsg} />\r\n          </Form.Group>\r\n        }\r\n      />\r\n\r\n      <Field\r\n        name=\"descr\"\r\n        placeholder=\"Description *\"\r\n        invalid={!!errors.descr}\r\n        render={\r\n          ({ field }) => <Form.Group>\r\n            <Form.Label htmlFor=\"descr-id\">\r\n              Description\r\n\r\n              <Form.RequiredMark>*</Form.RequiredMark>\r\n            </Form.Label>\r\n\r\n            <Form.Textarea\r\n              id=\"descr-id\"\r\n              invalid={!!errors.descr}\r\n              {...field}\r\n            />\r\n\r\n            <ErrorMessage name=\"descr\" component={Form.InvalidMsg} />\r\n          </Form.Group>\r\n        }\r\n      />\r\n\r\n      <Field\r\n        name=\"photographer\"\r\n        placeholder=\"Photographer\"\r\n        invalid={!!errors.photographer}\r\n        render={\r\n          ({ field }) => <Form.Group>\r\n            <Form.Label htmlFor=\"photographer-id\">Description</Form.Label>\r\n\r\n            <Form.TextInput\r\n              id=\"photographer-id\"\r\n              {...field}\r\n            />\r\n          </Form.Group>\r\n        }\r\n      />\r\n\r\n      <Form.SubmitBtn disabled={!isValid || isSubmitting}>SAVE</Form.SubmitBtn>\r\n    </Form>\r\n    }}\r\n  </Formik>\r\n})","import React, { memo } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\n// Components\r\nimport { Row, Col } from 'reactstrap'\r\nimport Wrapper from './components/Wrapper'\r\nimport Form from './components/Form'\r\n\r\n// Actions\r\nimport { update as updateImage } from 'actions/image'\r\n\r\nconst Edit = memo(props => {\r\n  const {\r\n    imageId,\r\n    image,\r\n    updateImage\r\n  } = props\r\n\r\n  return <Row>\r\n    <Col xs={{ size: 8, offset: 2 }}>\r\n      <Wrapper>\r\n        <Form\r\n          data={image}\r\n          onSubmit={updateImage}\r\n        />\r\n      </Wrapper>\r\n    </Col>\r\n  </Row>\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const imageId = ownProps.match.params.imageId\r\n  const foundImage = state.image.items.find(item => item.id === imageId)\r\n\r\n  return {\r\n    imageId,\r\n    image: foundImage\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  updateImage\r\n}\r\n\r\nconst mergeProps = (stateProps, dispatchProps) => ({\r\n  ...stateProps,\r\n  ...dispatchProps\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps, mergeProps)(Edit)","import styled from 'styled-components'\r\n\r\nconst OverlayWithSpinner = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  z-index: 9999;\r\n  background: ${props => props._bgColor};\r\n`\r\n\r\nOverlayWithSpinner.defaultProps = {\r\n  _bgColor: 'rgba(0, 0, 0, 0.3)'\r\n}\r\n\r\nexport default OverlayWithSpinner","import React from 'react'\r\n\r\nimport OverlayWithSpinner from './styled'\r\nimport { Spinner } from 'reactstrap'\r\n\r\nexport default props => {\r\n  const {\r\n    _bgColor\r\n  } = props\r\n\r\n  return <OverlayWithSpinner {...{ _bgColor }}>\r\n    <Spinner color=\"dark\" />\r\n  </OverlayWithSpinner>\r\n}","import React, { memo } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport OverlayWithSpinner from 'components/OverlayWithSpinner'\r\n\r\nconst TopLevelOverlayWithSpinner = memo(props => props.isSpinnerDisplayed && <OverlayWithSpinner />)\r\n\r\nexport default connect(\r\n  state => ({ isSpinnerDisplayed: state.spinner.isDisplayed })\r\n)(TopLevelOverlayWithSpinner)","import { createGlobalStyle } from 'styled-components'\r\n\r\nexport default createGlobalStyle`\r\n  @import url('https://fonts.googleapis.com/css?family=Montserrat:300,400,500,600,700');\r\n\r\n  body {\r\n    font-family: 'Montserrat', sans-serif !important;\r\n    /* color: #000; */\r\n  }\r\n`","import { combineReducers } from 'redux'\r\nimport { persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\n\r\n// Sub reducers\r\nimport image from 'reducers/image'\r\nimport spinner from 'reducers/spinner'\r\n\r\nconst rootPersistConfig = {\r\n  key: 'nasa-images',\r\n  storage,\r\n  whitelist: [ 'image' ]\r\n}\r\n\r\nconst rootReducer = combineReducers({\r\n  image,\r\n  spinner\r\n})\r\n\r\nexport default persistReducer(rootPersistConfig, rootReducer)","import update from 'immutability-helper'\r\nimport { cloneDeep } from 'lodash-es'\r\n\r\nimport * as imageActionTypes from 'constants/image'\r\n\r\nexport default (\r\n  state = {\r\n    items: [],\r\n    filteredItems: [],\r\n    isLoading: false,\r\n    isError: false,\r\n    hasData: false\r\n  },\r\n  action\r\n) => {\r\n  const { type, payload } = action\r\n\r\n  switch (type) {\r\n    case imageActionTypes.SEARCH_REQUEST: {\r\n      return update(state, {\r\n        isLoading: { $set: true }\r\n      })\r\n    }\r\n\r\n    case imageActionTypes.SEARCH_SUCCESS: {\r\n      return update(state, {\r\n        $merge: {\r\n          items: payload,\r\n          isLoading: false,\r\n          hasData: true\r\n        }\r\n      })\r\n    }\r\n\r\n    case imageActionTypes.SEARCH_FAILURE: {\r\n      return update(state, {\r\n        isLoading: { $set: false },\r\n        isError: { $set: true }\r\n      })\r\n    }\r\n\r\n    case imageActionTypes.MARK_AS_FAVORITE: {\r\n      return update(state, {\r\n        items: prevItems => {\r\n          const foundItemIndex = prevItems.findIndex(item => item.id === payload.imageId)\r\n\r\n          return update(prevItems, {\r\n            [foundItemIndex]: {\r\n              isFavorite: { $set: true }\r\n            }\r\n          })\r\n        }\r\n      })\r\n    }\r\n\r\n    case imageActionTypes.REMOVE_FAVORITE: {\r\n      return update(state, {\r\n        items: prevItems => {\r\n          const foundItemIndex = prevItems.findIndex(item => item.id === payload.imageId)\r\n\r\n          return update(prevItems, {\r\n            [foundItemIndex]: {\r\n              isFavorite: { $set: false }\r\n            }\r\n          })\r\n        }\r\n      })\r\n    }\r\n\r\n    case imageActionTypes.REMOVE: {\r\n      return update(state, {\r\n        items: prevItems => {\r\n          const foundItemIndex = prevItems.findIndex(item => item.id === payload.imageId)\r\n\r\n          return update(prevItems, {\r\n            $splice: [ [ foundItemIndex, 1 ] ]\r\n          })\r\n        }\r\n      })\r\n    }\r\n\r\n    case imageActionTypes.UPDATE: {\r\n      return update(state, {\r\n        items: prevItems => {\r\n          const foundItemIndex = prevItems.findIndex(item => item.id === payload.imageId)\r\n\r\n          return update(prevItems, {\r\n            [foundItemIndex]: { $merge: payload.data }\r\n          })\r\n        }\r\n      })\r\n    }\r\n\r\n    case imageActionTypes.FILTER: {\r\n      return update(state, {\r\n        filteredItems: () => {\r\n          let filteredItems = cloneDeep(state.items)\r\n\r\n          switch (payload.sortType) {\r\n            case 'oldest': {\r\n              filteredItems.sort((a , b) => {\r\n                if (a.dateCreated > b.dateCreated) {\r\n                  return 1\r\n                }\r\n\r\n                if (a.dateCreated < b.dateCreated) {\r\n                  return -1\r\n                }\r\n\r\n                return 0\r\n              })\r\n\r\n              break\r\n            }\r\n\r\n            case 'titleAZ': {\r\n              filteredItems.sort((a , b) => {\r\n                if (a.title.toLowerCase() > b.title.toLowerCase()) {\r\n                  return 1\r\n                }\r\n\r\n                if (a.title.toLowerCase() < b.title.toLowerCase()) {\r\n                  return -1\r\n                }\r\n\r\n                return 0\r\n              })\r\n\r\n              break\r\n            }\r\n\r\n            case 'titleZA': {\r\n              filteredItems.sort((a , b) => {\r\n                if (a.title.toLowerCase() < b.title.toLowerCase()) {\r\n                  return 1\r\n                }\r\n\r\n                if (a.title.toLowerCase() > b.title.toLowerCase()) {\r\n                  return -1\r\n                }\r\n\r\n                return 0\r\n              })\r\n\r\n              break\r\n            }\r\n\r\n            default: {\r\n              filteredItems.sort((a , b) => {\r\n                if (a.dateCreated < b.dateCreated) {\r\n                  return 1\r\n                }\r\n\r\n                if (a.dateCreated > b.dateCreated) {\r\n                  return -1\r\n                }\r\n\r\n                return 0\r\n              })\r\n            }\r\n          }\r\n\r\n          return filteredItems\r\n            .slice((payload.page - 1) * payload.itemPerPage, payload.itemPerPage)\r\n        }\r\n      })\r\n    }\r\n\r\n    default: {\r\n      return state\r\n    }\r\n  }\r\n}","import update from 'immutability-helper'\r\n\r\nimport * as spinnerActionTypes from 'constants/spinner'\r\n\r\nexport default (\r\n  state = {\r\n    isDisplayed: false\r\n  },\r\n  action\r\n) => {\r\n  const { type } = action\r\n\r\n  switch (type) {\r\n    case spinnerActionTypes.SHOW: {\r\n      return update(state, {\r\n        isDisplayed: { $set: true }\r\n      })\r\n    }\r\n    \r\n    case spinnerActionTypes.HIDE: {\r\n      return update(state, {\r\n        isDisplayed: { $set: false }\r\n      })\r\n    }\r\n\r\n    default: {\r\n      return state\r\n    }\r\n  }\r\n}","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { persistStore } from 'redux-persist'\r\nimport rootReducer from 'reducers'\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(\r\n    applyMiddleware(thunk)\r\n  )\r\n)\r\n\r\nexport const persistor = persistStore(store)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'))","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom'\nimport { ThemeProvider } from 'styled-components'\nimport { Helmet } from 'react-helmet'\nimport { PersistGate } from 'redux-persist/es/integration/react'\n\n// Layout\nimport Layout from 'containers/Layout'\n\n// Pages\nimport Home from 'pages/Home'\nimport Edit from 'pages/Edit'\n\n// Components\nimport TopLevelOverlayWithSpinner from 'containers/TopLevelOverlayWithSpinner'\n\n// Global Styles\nimport 'normalize.css/normalize.css'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport GlobalStyle from 'style/GlobalStyle'\n\n// Store\nimport { store, persistor } from 'store'\n\nexport default props => <Provider store={store}>\n  <PersistGate\n    loading={<span>Loading...</span>}\n    persistor={persistor}\n  >\n    <ThemeProvider theme={{\n      breakpoints: {\n        sm: '576px',\n        md: '768px',\n        lg: '992px',\n        xl: '1200px'\n      }\n    }}>\n      <>\n        <Helmet defaultTitle=\"NASA Images\" />\n\n        <GlobalStyle />\n        \n        <Router>\n          <Route render={props => <Layout {...props}>\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n\n              <Route exact path=\"/edit/:imageId\" component={Edit} />\n            </Switch>\n          </Layout>} />\n        </Router>\n\n        <TopLevelOverlayWithSpinner />\n      </>\n    </ThemeProvider>\n  </PersistGate>\n</Provider>"],"sourceRoot":""}